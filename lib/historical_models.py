# historical model records

model_m9_s10 = {
'time_fn_rsrc_rdst' :
"""[(state_0, fmt2_RETI_rn_x, PC_R0, Rnone) -> 5,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIT_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIT_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIT_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIT_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUB_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_SUB_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUB_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUB_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUB_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUB_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_SUB_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUB_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUB_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUB_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_0, jump_JZ_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JNZ_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JNC_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JN_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JMP_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JL_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JGE_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JC_x_x, Rnone, Rnone) -> 2,
 (state_0, fmt2_SXT_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_SXT_ai_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SXT_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_SXT_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_SXT_rn_x, SP_R1, Rnone) -> 1,
 (state_0, fmt2_SWPB_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SWPB_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 1,
 (state_0, fmt2_RRC_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_RRC_ai_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRC_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_RRC_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_RRC_rn_x, SP_R1, Rnone) -> 1,
 (state_0, fmt2_RRA_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_RRA_ai_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRA_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_RRA_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_RRA_rn_x, SP_R1, Rnone) -> 1,
 (state_0, fmt2_PUSH_ai_x, GR, Rnone) -> 3,
 (state_3, fmt2_PUSH_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_PUSH_ai_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_0, fmt2_PUSH_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_PUSH_ind_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 3,
 (state_2, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_0, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_PUSH_cg1_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_PUSH_rn_x, GR, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 3,
 (state_0, fmt2_CALL_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_0, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_XOR_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_XOR_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_XOR_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_XOR_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_XOR_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_XOR_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_XOR_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_XOR_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADD_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADD_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADD_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADD_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_AND_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_AND_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_AND_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_AND_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_AND_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_ADDC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_CMP_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_CMP_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_CMP_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_CMP_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADD_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_ADD_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADD_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_CMP_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIC_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_AND_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_AND_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_AND_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_AND_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_AND_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_AND_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_SUBC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_0, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIS_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIS_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIS_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIS_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIS_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIS_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIS_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_ADDC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, jump_JN_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt1_SUBC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_MOV_rn_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_MOV_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_XOR_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_AND_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_MOV_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_SUB_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, PC_R0) -> 4,
 (state_0, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_XOR_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt2_CALL_ind_x, GR, Rnone) -> 4,
 (state_0, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_0, fmt2_CALL_abs_x, SR_R2, Rnone) -> 5,
 (state_0, fmt2_CALL_sym_x, PC_R0, Rnone) -> 5,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_AND_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_1, fmt2_RRC_ai_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_1, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 2,
 (state_1, fmt2_PUSH_rn_x, GR, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_XOR_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_XOR_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_XOR_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_SUB_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUB_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_SUB_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_SUB_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_MOV_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_1, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_MOV_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_1, fmt1_CMP_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_CMP_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_1, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_1, fmt1_CMP_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_CMP_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIT_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_1, fmt1_BIS_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIS_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_BIS_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIS_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIC_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_AND_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_AND_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_AND_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_AND_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_ADD_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADD_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_ADD_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_ADD_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_0, fmt1_ADD_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_XOR_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_SUB_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_ADDC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_0, fmt1_BIT_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIS_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, GR) -> 2,
 (state_2, jump_JN_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_ai_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_2, fmt2_PUSH_rn_x, GR, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_XOR_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_XOR_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_XOR_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_SUBC_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_SUB_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUB_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_SUB_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUB_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_MOV_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_2, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_2, fmt1_CMP_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_CMP_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_2, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_2, fmt1_CMP_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_CMP_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIT_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_2, fmt1_BIS_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIS_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_BIS_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIS_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIC_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_AND_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_AND_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_AND_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_AND_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_ADDC_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_ADD_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADD_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_ADD_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADD_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_SUBC_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADDC_ind_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, jump_JN_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_RRC_ai_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_3, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 2,
 (state_3, fmt2_PUSH_rn_x, GR, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_XOR_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_XOR_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_XOR_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUB_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_SUB_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_SUB_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_CMP_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_3, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_3, fmt1_CMP_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_CMP_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_3, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIS_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_BIS_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIS_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_AND_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_AND_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_AND_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADD_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_ADD_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_ADD_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_XOR_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUBC_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_SUB_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_MOV_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_3, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_3, fmt1_CMP_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_3, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_BIT_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_3, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_3, fmt1_BIS_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIC_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_AND_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADDC_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_ADD_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_CMP_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt2_SXT_ai_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 (state_1, fmt2_RETI_rn_x, PC_R0, Rnone) -> 5,
 (state_1, fmt1_MOV_ai_rn, SP_R1, PC_R0) -> 4,
 (state_3, fmt2_SXT_ai_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 (state_2, fmt2_SXT_ai_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 (state_1, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt2_RRA_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRA_ind_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_1, fmt2_PUSH_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_PUSH_rn_x, R3, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_XOR_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_XOR_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_XOR_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_SUBC_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_SUBC_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUBC_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_SUB_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_SUB_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_SUB_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_MOV_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_MOV_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_MOV_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_1, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_1, fmt1_CMP_ai_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_CMP_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_BIT_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_1, fmt1_BIT_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIT_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_1, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_BIS_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIS_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIS_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_BIC_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIC_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIC_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_AND_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_AND_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_AND_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_ADDC_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_ADDC_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADDC_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_ADD_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_ADD_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_ADD_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_RRA_ind_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_3, fmt2_PUSH_rn_x, R3, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_XOR_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUBC_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_SUB_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_SUB_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_MOV_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_CMP_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_CMP_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 2,
 (state_3, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_3, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIT_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_BIS_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIS_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIC_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_AND_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_AND_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADDC_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_ADD_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_ADD_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt2_RRA_ai_x, GR, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_SUBC_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_SUBC_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_MOV_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_MOV_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_3, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_3, fmt1_CMP_ai_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_3, fmt1_BIT_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_BIT_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_3, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_BIC_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIC_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_ADDC_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_ADDC_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_2, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt2_RRA_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_RRA_ind_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_2, fmt2_PUSH_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_PUSH_rn_x, R3, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_XOR_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_XOR_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_SUBC_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_SUBC_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUBC_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_SUB_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUB_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_MOV_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_MOV_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_MOV_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_2, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_2, fmt1_CMP_ai_rn, GR, PC_R0) -> 2,
 (state_2, fmt1_CMP_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_CMP_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 1,
 (state_2, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_BIT_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_2, fmt1_BIT_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIT_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_2, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_BIS_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIS_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_BIC_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIC_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIC_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_AND_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_AND_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_ADDC_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_ADDC_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADDC_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_ADD_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADD_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, jump_JMP_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt2_SWPB_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_2, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_CALL_abs_x, SR_R2, Rnone) -> 5,
 (state_2, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> 5,
 (state_1, jump_JMP_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt2_SWPB_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_1, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_1, fmt2_CALL_abs_x, SR_R2, Rnone) -> 5,
 (state_1, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> 5,
 (state_3, jump_JMP_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_SWPB_ai_x, GR, Rnone) -> 4,
 (state_3, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_3, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_3, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_2, jump_JL_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_ind_x, GR, Rnone) -> 3,
 (state_2, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_PUSH_ai_x, R3, Rnone) -> 3,
 (state_2, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_2, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_XOR_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_SUBC_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_SUBC_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUBC_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_SUB_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_MOV_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_2, fmt1_MOV_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_MOV_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_2, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_2, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 2,
 (state_2, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_CMP_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_2, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_2, fmt1_BIT_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_2, fmt1_BIT_ind_rn, GR, PC_R0) -> 2,
 (state_2, fmt1_BIT_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIT_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_2, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIS_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_BIC_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_BIC_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIC_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_AND_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_ADDC_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_ADDC_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADDC_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_ADD_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, jump_JL_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_PUSH_ai_x, R3, Rnone) -> 2,
 (state_3, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_3, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_SUBC_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_SUBC_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_MOV_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_MOV_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_3, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_3, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_3, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_BIT_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIT_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_3, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIC_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIC_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_ADDC_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_ADDC_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt2_RRC_ind_x, GR, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_XOR_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUBC_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_SUB_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_MOV_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_3, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_3, fmt1_CMP_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_BIT_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_3, fmt1_BIT_ind_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_BIS_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIC_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_AND_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADDC_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_ADD_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_1, jump_JL_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_MOV_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_1, fmt1_MOV_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_MOV_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_1, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_CMP_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_1, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_1, fmt1_BIT_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_1, fmt1_BIT_ind_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIT_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_1, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIS_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIS_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_BIC_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_BIC_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIC_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_AND_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_AND_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_ADDC_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_ADDC_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_ADDC_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_ADD_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_ADD_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt2_RRC_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_PUSH_ai_x, R3, Rnone) -> 2,
 (state_1, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_1, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_XOR_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_XOR_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_SUBC_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_SUBC_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_SUBC_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_SUB_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_SUB_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt2_SXT_ind_x, GR, Rnone) -> 3,
 (state_2, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_CALL_ind_x, GR, Rnone) -> 4,
 (state_2, fmt1_MOV_ind_rn, GR, PC_R0) -> 3,
 (state_1, fmt2_SXT_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_CALL_ind_x, GR, Rnone) -> 5,
 (state_1, fmt1_MOV_ind_rn, GR, PC_R0) -> 4,
 (state_1, fmt1_MOV_idx_rn, SP_R1, PC_R0) -> 5,
 (state_3, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_SXT_ind_x, GR, Rnone) -> 4,
 (state_3, fmt2_CALL_ind_x, GR, Rnone) -> 5,
 (state_3, fmt1_MOV_ind_rn, GR, PC_R0) -> 4,
 (state_3, jump_JGE_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_RRA_rn_x, SP_R1, Rnone) -> 2,
 (state_3, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 2,
 (state_3, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_XOR_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_SUBC_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUBC_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_SUB_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_3, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_MOV_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_MOV_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_CMP_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 2,
 (state_3, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_3, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIT_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIS_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_BIC_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIC_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_AND_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_ADDC_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADDC_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_ADD_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_3, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_1, jump_JGE_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt1_SUBC_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_ADDC_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRA_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 2,
 (state_1, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_XOR_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_XOR_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_XOR_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_SUBC_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUBC_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_SUB_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_SUB_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUB_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_MOV_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_1, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_MOV_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_1, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_MOV_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_MOV_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_CMP_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_1, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_idx, SP_R1, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 1,
 (state_1, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_BIT_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_1, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIT_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIS_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_BIS_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIS_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_BIC_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIC_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_BIC_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIC_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_AND_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_AND_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_AND_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_AND_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_ADDC_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADDC_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADD_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_ADD_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADD_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, jump_JGE_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_RRA_rn_x, SP_R1, Rnone) -> 1,
 (state_2, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 3,
 (state_2, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_XOR_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_XOR_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_XOR_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_SUBC_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_SUBC_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUBC_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_SUB_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_SUB_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUB_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_MOV_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_2, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_2, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_MOV_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_MOV_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_CMP_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_2, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, SP_R1, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 1,
 (state_2, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_BIT_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_2, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 2,
 (state_2, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_2, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIT_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIS_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_BIS_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIS_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_BIC_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_BIC_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIC_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_AND_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_AND_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_AND_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_AND_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_ADDC_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_ADDC_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADDC_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_ADD_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_ADD_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADD_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_XOR_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_XOR_rn_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUBC_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUB_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_SUB_rn_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_MOV_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_3, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_CMP_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_3, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_BIT_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_3, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIS_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_BIS_rn_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIC_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_AND_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_AND_rn_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADDC_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADD_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_ADD_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUBC_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADDC_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_3, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 2,
 (state_2, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 1,
 (state_2, fmt2_CALL_sym_x, PC_R0, Rnone) -> 5,
 (state_2, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> 5,
 (state_1, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt2_CALL_sym_x, PC_R0, Rnone) -> 5,
 (state_1, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_2, fmt1_MOV_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_MOV_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_CMP_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_2, fmt1_BIT_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIT_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_2, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_2, fmt1_BIT_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIT_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIS_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_BIC_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIC_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_BIC_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIC_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_AND_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_ADDC_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADDC_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_ADDC_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADDC_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_ADD_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_2, jump_JC_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_2, fmt2_RRA_ai_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_PUSH_cg1_x, R3, Rnone) -> 3,
 (state_2, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_XOR_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_SUBC_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUBC_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_SUBC_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUBC_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_SUB_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_MOV_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_MOV_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_2, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_3, jump_JC_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_3, fmt2_RRA_ai_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_PUSH_cg1_x, R3, Rnone) -> 2,
 (state_3, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUBC_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_SUBC_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_SUBC_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_MOV_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_3, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_MOV_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_MOV_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_3, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIT_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_3, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_3, fmt1_BIT_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIT_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIC_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_BIC_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIC_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADDC_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_ADDC_rn_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_ADDC_rn_rn, SP_R1, R3) -> 2,
 (state_3, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_XOR_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_SUBC_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUB_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_MOV_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_3, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_CMP_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_3, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_3, fmt1_BIT_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_1, jump_JC_x_x, Rnone, Rnone) -> 3,
 (state_0, fmt1_MOV_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_1, fmt2_RRA_ai_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_PUSH_cg1_x, R3, Rnone) -> 2,
 (state_1, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_XOR_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_XOR_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_SUBC_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUBC_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_SUBC_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_SUBC_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUB_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_SUB_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_MOV_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_MOV_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_1, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_1, fmt1_MOV_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_MOV_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_CMP_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_1, fmt1_BIT_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIT_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_1, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_1, fmt1_BIT_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIT_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIS_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIS_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_BIC_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIC_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_BIC_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIC_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_AND_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_AND_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_ADDC_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADDC_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_ADDC_rn_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_ADDC_rn_rn, SP_R1, R3) -> 1,
 (state_1, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADD_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_ADD_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIS_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_BIC_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_AND_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_ADDC_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADD_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADDC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, jump_JZ_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt1_SUBC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, jump_JZ_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_RRC_ind_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_3, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_3, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_XOR_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_SUBC_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_SUBC_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUB_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_MOV_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_MOV_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_3, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_CMP_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_BIT_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIT_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 2,
 (state_3, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIS_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_BIC_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIC_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_AND_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_ADDC_ai_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_ADDC_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADD_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt2_RRC_ai_x, GR, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_XOR_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_SUB_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_SUB_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_3, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_3, fmt1_CMP_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_CMP_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_3, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_3, fmt1_BIT_ai_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_3, fmt1_BIS_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIS_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_AND_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_AND_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_ADD_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_ADD_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_XOR_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_XOR_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_SUBC_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_SUBC_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_SUB_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_SUB_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUB_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_1, fmt1_MOV_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_MOV_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_1, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_1, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_MOV_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_CMP_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_1, fmt1_CMP_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_CMP_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_1, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_1, fmt1_BIT_ai_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIT_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_BIS_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIS_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIS_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_BIC_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIC_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_AND_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_AND_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_AND_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_AND_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_ADDC_ai_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_ADDC_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_ADD_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_ADD_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADD_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt2_RRC_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRC_ind_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_1, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_1, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt1_XOR_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_2, fmt1_BIT_ai_rn, GR, PC_R0) -> 2,
 (state_2, fmt1_BIT_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIT_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 1,
 (state_2, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_BIS_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIS_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIS_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_BIC_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIC_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_AND_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_AND_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_AND_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_AND_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_ADDC_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADDC_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_ADD_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_ADD_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADD_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_2, jump_JZ_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_RRC_ind_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_2, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_2, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt1_XOR_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_XOR_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_XOR_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_SUBC_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUBC_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_SUB_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_SUB_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUB_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_2, fmt1_MOV_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_MOV_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_2, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_CMP_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_2, fmt1_CMP_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_CMP_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_2, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt2_SXT_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_SXT_ind_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_2, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt2_CALL_ai_x, GR, Rnone) -> 4,
 (state_2, fmt1_MOV_ai_rn, GR, PC_R0) -> 3,
 (state_1, fmt2_SXT_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_SXT_ind_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_1, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt2_CALL_ai_x, GR, Rnone) -> 5,
 (state_1, fmt1_MOV_ai_rn, GR, PC_R0) -> 4,
 (state_1, fmt1_MOV_ind_rn, SP_R1, PC_R0) -> 4,
 (state_3, fmt2_SXT_ind_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_3, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_SXT_ai_x, GR, Rnone) -> 4,
 (state_3, fmt2_CALL_ai_x, GR, Rnone) -> 5,
 (state_3, fmt1_MOV_ai_rn, GR, PC_R0) -> 4,
 (state_3, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt2_RRA_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_PUSH_ind_x, GR, Rnone) -> 4,
 (state_1, fmt1_XOR_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_XOR_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_XOR_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_SUBC_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_SUB_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_SUB_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_SUB_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_1, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_MOV_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_MOV_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_CMP_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_1, fmt1_CMP_ind_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_CMP_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_1, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIT_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_1, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_1, fmt1_BIS_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_BIS_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIS_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIC_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIC_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_AND_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_AND_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_AND_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_ADDC_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, fmt1_ADD_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_ADD_ind_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_ADD_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, jump_JNZ_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRA_ind_x, GR, Rnone) -> 3,
 (state_2, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_PUSH_ind_x, GR, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_XOR_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_XOR_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_SUBC_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_SUB_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_SUB_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUB_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_2, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_MOV_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_CMP_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_2, fmt1_CMP_ind_rn, GR, PC_R0) -> 2,
 (state_2, fmt1_CMP_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_CMP_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_2, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_2, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 2,
 (state_2, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIT_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_2, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_2, fmt1_BIS_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_BIS_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIS_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIC_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_AND_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_AND_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_AND_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_ADDC_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_ADD_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_ADD_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADD_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, jump_JNZ_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt1_SUBC_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_ADDC_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, jump_JNZ_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_XOR_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_XOR_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_SUB_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_SUB_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_CMP_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_CMP_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_3, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_3, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_3, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIS_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIS_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_AND_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_AND_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 2,
 (state_3, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_ADD_ind_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_ADD_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt2_RRA_ind_x, GR, Rnone) -> 4,
 (state_3, fmt2_PUSH_ind_x, GR, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_SUBC_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUB_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_3, fmt1_MOV_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_CMP_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_3, fmt1_CMP_ind_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_3, fmt1_BIT_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_BIS_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_BIC_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_AND_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_ADDC_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADD_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_3, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_3, fmt2_SWPB_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_SWPB_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_1, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_2, fmt2_SWPB_ind_x, GR, Rnone) -> 3,
 (state_2, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_2, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_2, jump_JNC_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_RRC_rn_x, SP_R1, Rnone) -> 1,
 (state_2, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_PUSH_ind_x, R3, Rnone) -> 3,
 (state_2, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt1_XOR_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_XOR_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_XOR_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_SUBC_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUBC_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_SUB_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_SUB_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUB_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_MOV_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_2, fmt1_MOV_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_2, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_idx, SP_R1, GR) -> 3,
 (state_2, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_CMP_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_2, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 2,
 (state_2, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_2, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_CMP_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIT_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_2, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_idx, SP_R1, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 1,
 (state_2, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_BIS_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_BIS_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIS_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIC_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_BIC_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIC_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_AND_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_AND_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_AND_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_ADDC_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADDC_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_ADD_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_ADD_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADD_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRC_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt2_PUSH_ind_x, R3, Rnone) -> 2,
 (state_1, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt1_XOR_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_XOR_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_XOR_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_XOR_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUBC_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUBC_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_SUB_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_SUB_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_SUB_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUB_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_MOV_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_1, fmt1_MOV_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_1, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_MOV_rn_idx, SP_R1, GR) -> 3,
 (state_1, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_CMP_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_1, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_CMP_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIT_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_1, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_idx, SP_R1, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 1,
 (state_1, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_BIS_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_BIS_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_BIS_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIS_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIC_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_BIC_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIC_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_AND_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_AND_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_AND_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_AND_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADDC_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 1,
 (state_1, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADDC_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, fmt1_ADD_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 1,
 (state_1, fmt1_ADD_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_ADD_rn_rn, GR, SP_R1) -> 1,
 (state_1, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADD_rn_rn, SP_R1, GR) -> 1,
 (state_1, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, jump_JNC_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_RRC_rn_x, SP_R1, Rnone) -> 2,
 (state_3, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_PUSH_ind_x, R3, Rnone) -> 2,
 (state_3, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_XOR_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_XOR_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_SUB_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUB_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_MOV_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_3, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_3, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_CMP_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_BIT_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 2,
 (state_3, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_BIS_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIS_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIC_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_AND_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_AND_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 2,
 (state_3, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 2,
 (state_3, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_ADD_rn_rn, GR, SP_R1) -> 2,
 (state_3, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADD_rn_rn, SP_R1, GR) -> 2,
 (state_3, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUBC_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_SUBC_rn_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUB_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_MOV_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_3, fmt1_MOV_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_CMP_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_3, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_BIT_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_3, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_BIS_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIC_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_BIC_rn_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_AND_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADDC_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_ADDC_rn_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADD_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_1, jump_JNC_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_2, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_SXT_rn_x, SP_R1, Rnone) -> 1,
 (state_2, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_1, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_SXT_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_1, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_1, fmt1_MOV_rn_rn, SP_R1, PC_R0) -> 2,
 (state_3, fmt2_SXT_rn_x, SP_R1, Rnone) -> 2,
 (state_3, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_3, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_3, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_1, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_1, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_1, fmt1_MOV_rn_rn, GR, PC_R0) -> 2,
 (state_3, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_3, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_2, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_2, fmt1_MOV_rn_rn, GR, PC_R0) -> 3,
 (state_3, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_3, fmt1_MOV_rn_rn, GR, PC_R0) -> 2,
 else -> 4]""",
'state_fn_default':
"""[(state_0, fmt2_RETI_rn_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIS_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIS_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIS_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIS_cg1_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_BIS_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIS_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIS_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIS_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIS_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIS_rn_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_BIS_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIS_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIS_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIS_rn_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_BIS_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIS_rn_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_BIS_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIS_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> state_2,
 (state_2, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIS_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIS_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIC_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIC_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIC_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ai_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_BIC_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIC_ai_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_BIC_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> state_2,
 (state_2, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIC_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIC_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> state_2,
 (state_2, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIC_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIC_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ind_abs, GR, SR_R2) -> state_2,
 (state_2, fmt1_BIC_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ind_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_BIC_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIC_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ind_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_BIC_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIC_ind_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_BIC_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> state_2,
 (state_2, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUBC_im2_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_SUBC_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUBC_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, R3, GR) -> state_2,
 (state_2, fmt1_SUBC_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_SUBC_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_SUBC_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUB_ai_idx, GR, GR) -> state_2,
 (state_2, fmt1_SUB_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ai_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_SUB_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ai_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_SUB_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUB_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ai_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_SUB_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ai_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_SUB_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUB_ai_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_SUB_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> state_2,
 (state_2, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> state_2,
 (state_2, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUB_ai_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_SUB_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUB_imm_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_SUB_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> state_2,
 (state_2, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> state_2,
 (state_2, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUB_ind_idx, GR, GR) -> state_2,
 (state_2, fmt1_SUB_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ind_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_SUB_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ind_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_SUB_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUB_ind_idx, R3, GR) -> state_2,
 (state_2, fmt1_SUB_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ind_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_SUB_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ind_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_SUB_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUB_ind_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_SUB_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> state_2,
 (state_2, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> state_2,
 (state_2, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUB_ind_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_SUB_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUB_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUB_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUB_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUB_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUB_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUB_cg1_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_SUB_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUB_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUB_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUB_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_SUB_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_SUB_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUB_rn_idx, R3, GR) -> state_2,
 (state_2, fmt1_SUB_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUB_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_SUB_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_SUB_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUB_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUB_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUB_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_imm_idx, PC_R0, GR) -> state_0,
 (state_0, jump_JZ_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JNZ_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JNC_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JN_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JMP_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JL_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JGE_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JC_x_x, Rnone, Rnone) -> state_0,
 (state_0, fmt2_SXT_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SXT_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SXT_ai_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SXT_ai_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SXT_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SXT_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SXT_ind_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SXT_ind_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SXT_idx_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SXT_idx_x, GR, Rnone) -> state_2,
 (state_2, fmt2_SXT_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SXT_abs_x, SR_R2, Rnone) -> state_1,
 (state_1, fmt2_SXT_abs_x, SR_R2, Rnone) -> state_2,
 (state_2, fmt2_SXT_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_SXT_idx_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SXT_idx_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SXT_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_SXT_sym_x, PC_R0, Rnone) -> state_2,
 (state_2, fmt2_SXT_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_SXT_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SXT_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_SXT_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SWPB_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ai_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SWPB_ai_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SWPB_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ind_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SWPB_ind_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_idx_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SWPB_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_abs_x, SR_R2, Rnone) -> state_1,
 (state_1, fmt2_SWPB_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_SWPB_idx_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SWPB_idx_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_SWPB_sym_x, PC_R0, Rnone) -> state_2,
 (state_2, fmt2_SWPB_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_SWPB_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_SWPB_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRC_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_ai_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRC_ai_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRC_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_ind_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRC_ind_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_idx_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRC_idx_x, GR, Rnone) -> state_2,
 (state_2, fmt2_RRC_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_abs_x, SR_R2, Rnone) -> state_1,
 (state_1, fmt2_RRC_abs_x, SR_R2, Rnone) -> state_2,
 (state_2, fmt2_RRC_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_RRC_idx_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRC_idx_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_RRC_sym_x, PC_R0, Rnone) -> state_2,
 (state_2, fmt2_RRC_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_RRC_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_RRC_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRA_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRA_ai_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRA_ai_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRA_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRA_ind_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRA_ind_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_idx_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRA_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRA_abs_x, SR_R2, Rnone) -> state_1,
 (state_1, fmt2_RRA_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_RRA_idx_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRA_idx_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_RRA_sym_x, PC_R0, Rnone) -> state_2,
 (state_2, fmt2_RRA_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_RRA_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRA_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_RRA_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ai_x, GR, Rnone) -> state_3,
 (state_3, fmt2_PUSH_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ai_x, R3, Rnone) -> state_2,
 (state_2, fmt2_PUSH_ai_x, R3, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ai_x, SR_R2, Rnone) -> state_2,
 (state_2, fmt2_PUSH_ai_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_PUSH_imm_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ind_x, GR, Rnone) -> state_3,
 (state_3, fmt2_PUSH_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ind_x, R3, Rnone) -> state_2,
 (state_2, fmt2_PUSH_ind_x, R3, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ind_x, SR_R2, Rnone) -> state_2,
 (state_2, fmt2_PUSH_ind_x, SR_R2, Rnone) -> state_2,
 (state_0, fmt2_PUSH_im2_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_PUSH_idx_x, GR, Rnone) -> state_3,
 (state_3, fmt2_PUSH_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_PUSH_cg1_x, R3, Rnone) -> state_2,
 (state_2, fmt2_PUSH_cg1_x, R3, Rnone) -> state_0,
 (state_0, fmt2_PUSH_abs_x, SR_R2, Rnone) -> state_3,
 (state_3, fmt2_PUSH_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_PUSH_sym_x, PC_R0, Rnone) -> state_3,
 (state_3, fmt2_PUSH_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_PUSH_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, GR, Rnone) -> state_2,
 (state_2, fmt2_PUSH_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, R3, Rnone) -> state_2,
 (state_2, fmt2_PUSH_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, SR_R2, Rnone) -> state_2,
 (state_2, fmt2_PUSH_rn_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, SP_R1, Rnone) -> state_2,
 (state_2, fmt2_PUSH_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, PC_R0, Rnone) -> state_2,
 (state_2, fmt2_PUSH_rn_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_CALL_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_CALL_imm_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_CALL_im2_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt1_XOR_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_XOR_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_XOR_ai_idx, R3, GR) -> state_2,
 (state_2, fmt1_XOR_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ai_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_XOR_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_XOR_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_XOR_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_XOR_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_XOR_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ind_abs, GR, SR_R2) -> state_2,
 (state_2, fmt1_XOR_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ind_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_XOR_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_XOR_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_XOR_ind_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_XOR_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_XOR_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_XOR_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> state_2,
 (state_2, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> state_2,
 (state_2, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_ADD_ai_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_ADD_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADD_imm_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_ADD_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> state_2,
 (state_2, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_ADD_ind_idx, GR, GR) -> state_2,
 (state_2, fmt1_ADD_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ind_abs, GR, SR_R2) -> state_2,
 (state_2, fmt1_ADD_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ind_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_ADD_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADD_ind_idx, R3, GR) -> state_2,
 (state_2, fmt1_ADD_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ind_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_ADD_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADD_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_ADD_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADD_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADD_cg1_idx, R3, GR) -> state_2,
 (state_2, fmt1_ADD_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADD_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADD_cg1_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_ADD_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADD_cg1_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_ADD_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADD_cg1_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_ADD_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADD_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_ADD_rn_idx, GR, GR) -> state_2,
 (state_2, fmt1_ADD_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, GR, SR_R2) -> state_2,
 (state_2, fmt1_ADD_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_ADD_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADD_rn_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_ADD_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADD_rn_idx, R3, GR) -> state_2,
 (state_2, fmt1_ADD_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_ADD_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_ADD_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADD_rn_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_ADD_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADD_rn_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_ADD_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> state_2,
 (state_2, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_ADD_rn_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_ADD_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADD_rn_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_ADD_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> state_2,
 (state_2, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> state_2,
 (state_2, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_abs, GR, SR_R2) -> state_1,
 (state_0, fmt1_AND_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_AND_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_AND_ind_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_AND_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_AND_ind_idx, R3, GR) -> state_2,
 (state_2, fmt1_AND_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_AND_ind_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_AND_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_AND_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_AND_ind_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_AND_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_AND_ind_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_AND_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_AND_ind_abs, SR_R2, SR_R2) -> state_2,
 (state_2, fmt1_AND_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_AND_ind_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_AND_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_AND_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_AND_ind_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_AND_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_AND_ind_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_AND_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_AND_ind_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_AND_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_AND_ind_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_AND_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_AND_im2_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_AND_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_AND_im2_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_AND_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_AND_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_AND_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_AND_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_AND_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_AND_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_AND_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_AND_cg1_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_AND_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_AND_rn_idx, GR, GR) -> state_2,
 (state_2, fmt1_AND_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_AND_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_AND_rn_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_AND_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_AND_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_AND_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_AND_rn_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_AND_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_AND_rn_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_AND_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_AND_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_AND_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_AND_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_AND_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_AND_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_AND_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_AND_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_AND_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_AND_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_AND_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_AND_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_AND_rn_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_AND_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_AND_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_AND_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, R3, GR) -> state_2,
 (state_2, fmt1_ADDC_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_ADDC_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADDC_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADDC_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADDC_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_cg1_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_ADDC_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_rn_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_ADDC_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_ADD_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADD_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ai_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_ADD_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADD_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIC_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIC_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIC_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIC_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIC_cg1_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_BIC_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIC_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIC_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIC_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIC_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIC_rn_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_BIC_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIC_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIC_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIC_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIC_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIC_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIC_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIC_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIC_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_AND_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_AND_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_AND_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_AND_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_AND_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_AND_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_AND_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_AND_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_AND_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_AND_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_AND_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_AND_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_AND_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_AND_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_AND_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_AND_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_AND_ai_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_AND_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_AND_imm_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_AND_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_AND_imm_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_AND_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_AND_imm_idx, PC_R0, SP_R1) -> state_2,
 (state_2, fmt1_AND_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_AND_imm_sym, PC_R0, PC_R0) -> state_2,
 (state_2, fmt1_AND_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_AND_ind_idx, GR, GR) -> state_2,
 (state_2, fmt1_AND_ind_idx, GR, GR) -> state_0,
 (state_1, fmt1_AND_ind_abs, GR, SR_R2) -> state_2,
 (state_2, fmt1_AND_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_XOR_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_XOR_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_XOR_cg1_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_XOR_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_XOR_cg1_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_XOR_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_XOR_cg1_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_XOR_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_XOR_rn_idx, GR, GR) -> state_2,
 (state_2, fmt1_XOR_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_XOR_rn_abs, GR, SR_R2) -> state_2,
 (state_2, fmt1_XOR_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_XOR_rn_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_XOR_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_XOR_rn_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_XOR_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_XOR_rn_idx, R3, GR) -> state_2,
 (state_2, fmt1_XOR_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_XOR_rn_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_XOR_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_XOR_rn_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_XOR_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_XOR_rn_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_XOR_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_XOR_rn_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_XOR_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> state_2,
 (state_2, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_XOR_rn_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_XOR_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_XOR_rn_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_XOR_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> state_2,
 (state_2, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> state_2,
 (state_2, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, GR, GR) -> state_2,
 (state_2, fmt1_SUBC_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ai_abs, GR, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ai_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, R3, GR) -> state_2,
 (state_2, fmt1_SUBC_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ai_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ai_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_SUBC_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_SUBC_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUBC_imm_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_SUBC_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, GR, GR) -> state_2,
 (state_2, fmt1_SUBC_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ind_abs, GR, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, GR, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ind_sym, GR, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, R3, GR) -> state_2,
 (state_2, fmt1_SUBC_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ind_abs, R3, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ind_sym, R3, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, SR_R2, GR) -> state_2,
 (state_2, fmt1_SUBC_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> state_2,
 (state_2, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> state_2,
 (state_2, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIS_ai_idx, GR, GR) -> state_2,
 (state_2, fmt1_BIS_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIS_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ai_idx, R3, SP_R1) -> state_2,
 (state_2, fmt1_BIS_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIS_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIS_ai_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_BIS_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIS_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIS_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIS_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIS_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIS_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIS_im2_idx, PC_R0, GR) -> state_2,
 (state_2, fmt1_BIS_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> state_2,
 (state_2, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt2_CALL_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_CALL_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_CALL_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_CALL_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt2_CALL_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> state_0,
 else -> state_0]""",
'state_fn_init':"""state_0""",
}

model_m10_simple = {
'time_fn_rsrc_rdst' :
"""[(state_0, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_BIC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_AND_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_AND_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_ADDC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_ADD_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, jump_JL_x_x, Rnone, Rnone) -> 2,
 (state_0, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_CALL_ind_x, GR, Rnone) -> 4,
 (state_0, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_0, fmt2_CALL_abs_x, SR_R2, Rnone) -> 5,
 (state_0, fmt2_CALL_sym_x, PC_R0, Rnone) -> 5,
 (state_0, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_0, fmt1_XOR_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_XOR_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_SUBC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_SUBC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_SUB_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUB_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_SUB_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_0, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_MOV_rn_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_CMP_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIT_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIS_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_BIS_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIS_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt2_RETI_rn_x, PC_R0, Rnone) -> 5,
 (state_0, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIT_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIT_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIT_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIT_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUB_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_SUB_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUB_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUB_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUB_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUB_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_SUB_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUB_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUB_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUB_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_MOV_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, jump_JNZ_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JNC_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JN_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JMP_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JGE_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JC_x_x, Rnone, Rnone) -> 2,
 (state_1, fmt2_SXT_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_SXT_ai_x, GR, Rnone) -> 3,
 (state_1, fmt2_SXT_ai_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SXT_ai_x, SP_R1, Rnone) -> 3,
 (state_1, fmt2_SXT_ind_x, GR, Rnone) -> 4,
 (state_0, fmt2_SXT_ind_x, GR, Rnone) -> 3,
 (state_1, fmt2_SXT_ind_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SXT_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_SXT_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt2_SWPB_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_SWPB_ai_x, GR, Rnone) -> 3,
 (state_1, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 3,
 (state_1, fmt2_SWPB_ind_x, GR, Rnone) -> 4,
 (state_0, fmt2_SWPB_ind_x, GR, Rnone) -> 3,
 (state_1, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt2_RRC_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRC_ai_x, GR, Rnone) -> 3,
 (state_1, fmt2_RRC_ai_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRC_ai_x, SP_R1, Rnone) -> 3,
 (state_1, fmt2_RRC_ind_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRC_ind_x, GR, Rnone) -> 3,
 (state_1, fmt2_RRC_ind_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRC_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_RRC_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt2_RRA_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRA_ai_x, GR, Rnone) -> 3,
 (state_1, fmt2_RRA_ai_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRA_ai_x, SP_R1, Rnone) -> 3,
 (state_1, fmt2_RRA_ind_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRA_ind_x, GR, Rnone) -> 3,
 (state_1, fmt2_RRA_ind_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRA_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_RRA_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt2_PUSH_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_PUSH_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_PUSH_ai_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_1, fmt2_PUSH_ind_x, GR, Rnone) -> 4,
 (state_0, fmt2_PUSH_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_PUSH_ind_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_0, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_PUSH_cg1_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_PUSH_rn_x, GR, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 3,
 (state_0, fmt2_CALL_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_0, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_XOR_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_XOR_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_XOR_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_XOR_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_XOR_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_XOR_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_XOR_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_XOR_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADD_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADD_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADD_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADD_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_AND_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_AND_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_AND_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_AND_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_AND_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_ADDC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_CMP_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_CMP_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_CMP_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADD_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_ADD_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADD_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_MOV_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_MOV_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_CMP_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIC_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_AND_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_AND_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_AND_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_AND_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_AND_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_AND_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_SUBC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, R3) -> 2,
 (state_0, jump_JZ_x_x, Rnone, Rnone) -> 2,
 (state_0, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_0, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIS_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIS_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIS_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIS_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIS_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIS_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIS_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIS_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 else -> 4]""",
'state_fn_default' :
"""[(state_0, fmt2_RETI_rn_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt1_BIS_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIS_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIC_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIC_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUB_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUB_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, jump_JNZ_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JNC_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JN_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JMP_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JL_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JGE_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JC_x_x, Rnone, Rnone) -> state_0,
 (state_0, fmt2_SXT_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SXT_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SXT_ai_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SXT_ai_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SXT_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SXT_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SXT_ind_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SXT_ind_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SXT_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SXT_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_SXT_idx_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SXT_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_SXT_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SXT_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_SXT_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SWPB_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ai_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SWPB_ai_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SWPB_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ind_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SWPB_ind_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_SWPB_idx_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_SWPB_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_SWPB_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRC_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_ai_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRC_ai_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRC_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_ind_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRC_ind_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_RRC_idx_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_RRC_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_RRC_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRA_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRA_ai_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRA_ai_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_RRA_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRA_ind_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRA_ind_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRA_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_RRA_idx_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_RRA_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRA_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_RRA_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_PUSH_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ai_x, R3, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ai_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_PUSH_imm_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ind_x, GR, Rnone) -> state_1,
 (state_1, fmt2_PUSH_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ind_x, R3, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ind_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_PUSH_im2_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_PUSH_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt2_PUSH_cg1_x, R3, Rnone) -> state_0,
 (state_0, fmt2_PUSH_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_PUSH_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_PUSH_rn_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_CALL_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_CALL_imm_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_CALL_im2_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt1_XOR_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADD_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADD_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_AND_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIC_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_AND_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_AND_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_XOR_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, jump_JZ_x_x, Rnone, Rnone) -> state_0,
 (state_0, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_idx_abs, GR, SR_R2) -> state_0,
 else -> state_0]""",
'state_fn_init':"""state_0""",
}

model_m10_full = {
'time_fn_rsrc_rdst' :
"""[(state_0, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_BIC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIC_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_AND_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_AND_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_AND_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_AND_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_AND_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_AND_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_AND_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_AND_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_AND_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_AND_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_AND_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_AND_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_AND_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_AND_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_ADDC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_ADDC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_ADDC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADD_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_ADD_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_ADD_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADD_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADD_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_ADD_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_ADD_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_ADD_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_ADD_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, jump_JZ_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JNZ_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JNC_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JN_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JMP_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JL_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JGE_x_x, Rnone, Rnone) -> 2,
 (state_0, jump_JC_x_x, Rnone, Rnone) -> 2,
 (state_0, fmt2_SXT_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_SXT_ai_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SXT_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_SXT_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_SXT_rn_x, SP_R1, Rnone) -> 1,
 (state_0, fmt2_SWPB_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SWPB_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 1,
 (state_0, fmt2_RRC_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_RRC_ai_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRC_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_RRC_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_RRC_rn_x, SP_R1, Rnone) -> 1,
 (state_0, fmt2_RRA_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_RRA_ai_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRA_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_RRA_ind_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_0, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_0, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_0, fmt2_RRA_rn_x, SP_R1, Rnone) -> 1,
 (state_0, fmt2_RETI_rn_x, PC_R0, Rnone) -> 5,
 (state_0, fmt2_PUSH_ai_x, GR, Rnone) -> 3,
 (state_0, fmt2_PUSH_ai_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_0, fmt2_PUSH_ind_x, GR, Rnone) -> 3,
 (state_0, fmt2_PUSH_ind_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_0, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_0, fmt2_PUSH_cg1_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_0, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_PUSH_rn_x, GR, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, R3, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 3,
 (state_0, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 3,
 (state_0, fmt2_CALL_ai_x, GR, Rnone) -> 4,
 (state_0, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_CALL_ind_x, GR, Rnone) -> 4,
 (state_0, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_0, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_0, fmt2_CALL_abs_x, SR_R2, Rnone) -> 5,
 (state_0, fmt2_CALL_sym_x, PC_R0, Rnone) -> 5,
 (state_0, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_0, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_XOR_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_XOR_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_XOR_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_XOR_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_XOR_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_XOR_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_XOR_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_XOR_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_XOR_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_XOR_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_SUBC_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_SUBC_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_SUBC_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUB_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_SUB_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_SUB_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUB_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUB_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUB_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_SUB_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_SUB_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_SUB_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_SUB_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_SUB_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_SUB_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_0, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_0, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_0, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_0, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_MOV_ai_rn, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_MOV_ai_rn, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_MOV_ind_rn, GR, PC_R0) -> 4,
 (state_0, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_MOV_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_MOV_ind_rn, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_0, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_MOV_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_MOV_idx_rn, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_MOV_rn_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_CMP_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_CMP_ai_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_CMP_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_CMP_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_CMP_ind_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_CMP_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 1,
 (state_0, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_0, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIT_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIT_ai_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIT_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_0, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_0, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_0, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_0, fmt1_BIT_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIT_ind_rn, GR, PC_R0) -> 2,
 (state_0, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_0, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_0, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_0, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_0, fmt1_BIT_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 2,
 (state_0, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_0, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_0, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_0, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_0, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_0, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_0, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_0, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_0, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_0, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_0, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, SP_R1, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, SP_R1, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 1,
 (state_0, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_0, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_0, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_0, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_0, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 1,
 (state_0, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_0, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_0, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIS_ai_rn, GR, GR) -> 2,
 (state_0, fmt1_BIS_ai_rn, GR, R3) -> 2,
 (state_0, fmt1_BIS_ai_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIS_ai_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_ai_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIS_ai_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIS_ai_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_0, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_0, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_0, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_0, fmt1_BIS_ind_rn, GR, GR) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, R3) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, SR_R2) -> 2,
 (state_0, fmt1_BIS_ind_rn, GR, SP_R1) -> 2,
 (state_0, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_ind_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIS_ind_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_0, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_0, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_0, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_0, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_0, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 1,
 (state_0, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_0, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_0, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_0, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_0, fmt1_BIS_ind_rn, SP_R1, GR) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, R3) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SR_R2) -> 2,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 2,
 (state_0, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_0, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_0, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_0, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_0, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_0, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_0, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_0, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 (state_0, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_0, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_0, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_0, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_0, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_0, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_0, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_0, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_0, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_0, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_0, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_0, fmt1_BIS_cg1_rn, R3, SR_R2) -> 1,
 (state_0, fmt1_BIS_cg1_rn, R3, SP_R1) -> 1,
 (state_0, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_0, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_0, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_0, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_0, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> 3,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_0, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_0, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_0, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_0, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_0, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_0, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SR_R2) -> 3,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_0, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_3, jump_JGE_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt1_SUBC_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADDC_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_AND_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_AND_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_ADDC_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADDC_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADD_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_ADD_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADD_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUBC_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_MOV_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIC_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADDC_ai_rn, GR, SR_R2) -> 3,
 (state_2, jump_JGE_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_RRA_rn_x, SP_R1, Rnone) -> 1,
 (state_2, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 3,
 (state_2, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_XOR_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_XOR_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_XOR_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_SUBC_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_SUBC_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUBC_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_SUB_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_SUB_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUB_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_MOV_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_2, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_2, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_MOV_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_MOV_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_CMP_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_2, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, SP_R1, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 1,
 (state_2, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_BIT_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_2, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 2,
 (state_2, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_2, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIT_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIS_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_BIS_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIS_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_BIC_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_BIC_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIC_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_AND_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_AND_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_AND_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_AND_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_ADDC_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_ADDC_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_ADDC_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADDC_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_ADD_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_ADD_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADD_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 1,
 (state_1, jump_JGE_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRA_rn_x, SP_R1, Rnone) -> 2,
 (state_1, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 2,
 (state_1, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 4,
 (state_1, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_XOR_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_XOR_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_XOR_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_SUBC_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUBC_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_SUB_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_SUB_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUB_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_1, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_1, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_MOV_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_MOV_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_CMP_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_1, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 2,
 (state_1, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIT_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_1, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIT_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIS_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_BIS_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIS_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_BIC_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIC_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_AND_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_3, fmt2_RRC_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_RRA_idx_x, GR, Rnone) -> 4,
 (state_3, fmt2_RRA_rn_x, SP_R1, Rnone) -> 1,
 (state_3, fmt2_PUSH_ai_x, SR_R2, Rnone) -> 2,
 (state_3, fmt2_PUSH_idx_x, GR, Rnone) -> 4,
 (state_3, fmt2_PUSH_rn_x, SP_R1, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_XOR_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_XOR_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_XOR_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_XOR_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_XOR_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_XOR_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_XOR_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_XOR_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_XOR_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_XOR_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_XOR_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_SUBC_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_SUBC_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_SUBC_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_SUBC_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_SUBC_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_SUBC_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_SUBC_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_SUBC_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_SUBC_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUBC_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_SUB_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_SUB_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUB_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_SUB_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_SUB_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_SUB_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_SUB_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_SUB_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUB_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_SUB_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_SUB_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUB_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_MOV_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_MOV_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_MOV_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_MOV_ind_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_MOV_ind_idx, R3, GR) -> 3,
 (state_3, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_MOV_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_MOV_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_MOV_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_MOV_cg1_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> 5,
 (state_3, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_MOV_sym_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_MOV_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_MOV_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_MOV_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_MOV_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_CMP_ai_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_CMP_ai_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_CMP_ai_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_CMP_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_CMP_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_CMP_idx_idx, GR, GR) -> 5,
 (state_3, fmt1_CMP_idx_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_CMP_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_CMP_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_CMP_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_CMP_rn_sym, GR, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_idx, SP_R1, GR) -> 3,
 (state_3, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> 1,
 (state_3, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_BIT_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIT_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_BIT_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_BIT_ind_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_BIT_ind_idx, R3, GR) -> 3,
 (state_3, fmt1_BIT_ind_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIT_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIT_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_BIT_cg1_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> 5,
 (state_3, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIT_sym_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_BIT_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIT_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIT_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_BIS_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIS_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIS_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIS_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_BIS_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIS_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_BIS_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIS_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIS_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_BIS_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_BIS_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIS_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_BIC_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIC_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_BIC_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIC_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIC_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIC_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIC_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIC_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_BIC_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_BIC_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_BIC_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_BIC_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIC_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIC_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_AND_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_AND_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_AND_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_AND_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_AND_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_AND_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_AND_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_AND_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_AND_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_AND_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_AND_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_AND_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_AND_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_AND_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_AND_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_AND_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_AND_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_AND_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_AND_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_AND_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_ADDC_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_ADDC_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_ADDC_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_ADDC_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_ADDC_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_ADDC_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_ADDC_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_ADDC_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_ADDC_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_ADDC_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADDC_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_ADD_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_ADD_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADD_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_ADD_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_ADD_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_ADD_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_ADD_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_ADD_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADD_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_ADD_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_ADD_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADD_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_SUBC_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_ADDC_ind_rn, SP_R1, SR_R2) -> 3,
 (state_2, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 1,
 (state_2, fmt2_CALL_sym_x, PC_R0, Rnone) -> 5,
 (state_2, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> 5,
 (state_3, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_3, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 1,
 (state_3, fmt2_CALL_sym_x, PC_R0, Rnone) -> 5,
 (state_3, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> 5,
 (state_1, fmt2_SXT_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt2_SWPB_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_SWPB_rn_x, SP_R1, Rnone) -> 2,
 (state_3, jump_JC_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_XOR_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_SUB_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIS_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_AND_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADD_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_3, fmt2_RRA_ai_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_PUSH_cg1_x, R3, Rnone) -> 2,
 (state_3, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_XOR_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_XOR_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, jump_JC_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_1, fmt2_RRA_ai_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_PUSH_cg1_x, R3, Rnone) -> 2,
 (state_1, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_SUBC_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUBC_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_SUBC_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_SUBC_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_MOV_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_MOV_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_1, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_1, fmt1_MOV_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_MOV_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_CMP_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_1, fmt1_BIT_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIT_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_1, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_1, fmt1_BIT_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIT_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_BIC_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIC_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_BIC_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIC_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_ADDC_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADDC_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_ADDC_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_ADDC_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_MOV_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_BIC_rn_rn, SR_R2, SR_R2) -> 1,
 (state_2, jump_JC_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_rn_x, GR, Rnone) -> 1,
 (state_2, fmt2_RRA_ai_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_PUSH_cg1_x, R3, Rnone) -> 3,
 (state_2, fmt2_PUSH_rn_x, PC_R0, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_XOR_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_XOR_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_XOR_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_XOR_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_XOR_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_XOR_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_XOR_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_SUBC_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUBC_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_SUBC_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUBC_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_SUB_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_MOV_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_MOV_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_2, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_2, fmt1_MOV_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_MOV_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_CMP_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_2, fmt1_BIT_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIT_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_2, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_2, fmt1_BIT_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIT_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIS_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_BIC_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIC_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_BIC_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIC_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_AND_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_ADDC_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADDC_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_ADDC_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADDC_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_ADD_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_XOR_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_XOR_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_XOR_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_XOR_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_SUBC_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUBC_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUBC_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_SUBC_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_SUBC_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUBC_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUBC_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_SUBC_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_SUBC_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_SUBC_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_SUBC_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_SUBC_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_SUB_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_SUB_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUB_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUB_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUB_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_SUB_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_SUB_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_SUB_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_SUB_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_SUB_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_SUB_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_SUB_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_SUB_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_MOV_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_MOV_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_MOV_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_MOV_ind_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_MOV_ind_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_MOV_ind_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_MOV_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_MOV_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> 5,
 (state_3, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_MOV_rn_idx, GR, GR) -> 3,
 (state_3, fmt1_MOV_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_MOV_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_MOV_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_CMP_ai_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_CMP_ai_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_CMP_ai_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_CMP_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_CMP_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_CMP_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_CMP_idx_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_CMP_cg1_idx, R3, GR) -> 3,
 (state_3, fmt1_CMP_cg1_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_CMP_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_CMP_rn_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_idx, PC_R0, GR) -> 3,
 (state_3, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> 1,
 (state_3, fmt1_BIT_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIT_ai_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIT_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIT_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_BIT_ind_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_BIT_ind_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_BIT_ind_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIT_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_BIT_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> 5,
 (state_3, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIT_rn_idx, GR, GR) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, PC_R0) -> 1,
 (state_3, fmt1_BIT_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIT_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_BIT_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_BIS_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIS_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIS_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIS_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIS_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_BIS_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIS_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_BIS_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIS_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIS_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_BIS_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_BIS_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_BIS_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_BIC_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIC_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIC_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIC_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIC_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIC_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIC_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_BIC_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_BIC_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_BIC_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIC_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_BIC_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_AND_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_AND_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_AND_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_AND_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_AND_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_AND_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_AND_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_AND_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_AND_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_AND_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_AND_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_AND_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_AND_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_AND_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_AND_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_AND_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_AND_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_AND_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_AND_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_AND_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_ADDC_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADDC_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADDC_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_ADDC_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_ADDC_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADDC_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADDC_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_ADDC_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_ADDC_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_ADDC_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_ADDC_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_ADDC_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_ADD_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_ADD_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADD_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADD_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADD_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_ADD_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_ADD_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_ADD_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_ADD_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_ADD_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_ADD_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_ADD_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_ADD_rn_idx, PC_R0, GR) -> 4,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_1, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_2, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_2, fmt1_MOV_rn_rn, GR, PC_R0) -> 3,
 (state_3, fmt2_SXT_rn_x, GR, Rnone) -> 1,
 (state_3, fmt2_SWPB_ai_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_3, fmt1_MOV_rn_rn, GR, PC_R0) -> 2,
 (state_1, fmt2_CALL_rn_x, GR, Rnone) -> 4,
 (state_1, fmt1_MOV_rn_rn, GR, PC_R0) -> 2,
 (state_3, fmt1_SUBC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_ADDC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_1, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_2, jump_JZ_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_RRC_ind_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_2, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_2, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt1_XOR_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_XOR_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_XOR_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_SUBC_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUBC_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_SUB_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_SUB_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUB_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_2, fmt1_MOV_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_MOV_ai_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_MOV_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_2, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_CMP_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_2, fmt1_CMP_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_CMP_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_2, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_2, fmt1_BIT_ai_rn, GR, PC_R0) -> 2,
 (state_2, fmt1_BIT_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIT_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_3, jump_JZ_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt1_SUBC_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_1, jump_JZ_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_RRC_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRC_ind_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_1, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_1, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt1_XOR_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_XOR_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_XOR_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_SUBC_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_SUBC_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_SUB_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_SUB_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUB_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_1, fmt1_MOV_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_MOV_ai_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_MOV_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_1, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_1, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_CMP_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_1, fmt1_CMP_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_CMP_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_1, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_1, fmt1_BIT_ai_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIT_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 2,
 (state_1, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_BIS_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIS_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIS_ind_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIS_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_BIC_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIC_ai_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIC_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_AND_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_AND_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_AND_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt2_RRC_ai_x, GR, Rnone) -> 4,
 (state_3, fmt2_RRC_ind_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_RRC_rn_x, R3, Rnone) -> 1,
 (state_3, fmt2_RRA_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_PUSH_imm_x, PC_R0, Rnone) -> 3,
 (state_3, fmt2_PUSH_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_XOR_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_XOR_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_XOR_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_XOR_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_XOR_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_XOR_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_XOR_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_XOR_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_XOR_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_XOR_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_SUBC_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_SUBC_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_SUBC_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUBC_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_SUBC_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_SUBC_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUBC_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUBC_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_SUBC_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_SUBC_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_SUBC_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_SUB_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_SUB_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUB_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_SUB_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUB_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUB_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_SUB_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_SUB_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUB_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_SUB_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_SUB_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_MOV_ai_idx, GR, GR) -> 4,
 (state_3, fmt1_MOV_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_MOV_ai_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_MOV_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_MOV_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_MOV_ind_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_MOV_ind_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_MOV_ind_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_MOV_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_MOV_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_MOV_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_MOV_rn_abs, GR, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_idx, R3, GR) -> 3,
 (state_3, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_MOV_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_MOV_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_CMP_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_CMP_ai_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_CMP_imm_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> 2,
 (state_3, fmt1_CMP_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_CMP_ind_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_CMP_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_CMP_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_CMP_idx_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_CMP_cg1_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_CMP_abs_idx, SR_R2, GR) -> 5,
 (state_3, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_CMP_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_BIT_ai_idx, GR, GR) -> 4,
 (state_3, fmt1_BIT_ai_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_BIT_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIT_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIT_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIT_ind_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_BIT_ind_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIT_ind_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIT_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIT_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_BIT_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIT_rn_abs, GR, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_3, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_BIS_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIS_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIS_ind_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIS_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_BIC_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIC_ai_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIC_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIC_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_AND_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_AND_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_AND_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_AND_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_ADDC_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_ADDC_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_ADD_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_ADD_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADD_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_BIT_rn_idx, R3, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> 1,
 (state_2, fmt1_BIT_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_BIS_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_BIS_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIS_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIS_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIS_ind_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIS_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIS_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIS_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_BIS_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIS_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIS_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_BIS_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_BIC_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_BIC_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIC_ai_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIC_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIC_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIC_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIC_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIC_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIC_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_BIC_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_BIC_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_BIC_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_BIC_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIC_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_AND_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_AND_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_AND_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_AND_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_AND_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_AND_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_AND_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_AND_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_AND_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_AND_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_AND_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_AND_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_AND_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_ADDC_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADDC_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_ADDC_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_ADD_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_ADD_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADD_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_AND_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_AND_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_AND_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_AND_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_AND_rn_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_AND_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_ADDC_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_ADDC_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADDC_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_ADDC_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_ADDC_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADDC_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_ADDC_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_ADDC_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_ADDC_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_ADDC_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_ADD_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_ADD_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADD_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_ADD_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADD_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADD_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_ADD_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_ADD_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADD_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADD_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_ADD_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt2_SXT_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_SXT_ind_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_2, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt2_CALL_ai_x, GR, Rnone) -> 4,
 (state_2, fmt1_MOV_ai_rn, GR, PC_R0) -> 3,
 (state_1, fmt2_SXT_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_SXT_ind_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_1, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_SXT_ai_x, GR, Rnone) -> 4,
 (state_3, fmt2_SXT_ind_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_SXT_rn_x, R3, Rnone) -> 1,
 (state_3, fmt2_SWPB_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_CALL_ai_x, GR, Rnone) -> 5,
 (state_3, fmt1_MOV_ai_rn, GR, PC_R0) -> 4,
 (state_3, fmt1_MOV_ind_rn, SP_R1, PC_R0) -> 4,
 (state_1, fmt2_CALL_ai_x, GR, Rnone) -> 5,
 (state_1, fmt1_MOV_ai_rn, GR, PC_R0) -> 4,
 (state_3, jump_JNZ_x_x, Rnone, Rnone) -> 3,
 (state_2, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_2, fmt1_BIS_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_BIS_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIS_ind_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIS_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIC_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_BIC_cg1_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_AND_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_AND_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_AND_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_ADDC_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_ADD_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_ADD_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADD_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_1, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIT_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_1, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_1, fmt1_BIS_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_BIS_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIS_ind_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIS_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIC_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIC_cg1_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_AND_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_AND_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_AND_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_ADDC_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_ADD_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_ADD_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_ADD_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_2, jump_JNZ_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRA_ind_x, GR, Rnone) -> 3,
 (state_2, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_PUSH_ind_x, GR, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_XOR_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_XOR_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_SUBC_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_SUB_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_SUB_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUB_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_2, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_MOV_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_MOV_cg1_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_CMP_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_2, fmt1_CMP_ind_rn, GR, PC_R0) -> 2,
 (state_2, fmt1_CMP_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_CMP_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_2, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_2, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 2,
 (state_2, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIT_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_2, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt2_RRA_ind_x, GR, Rnone) -> 4,
 (state_3, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_PUSH_ind_x, GR, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_XOR_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_XOR_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_XOR_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_SUBC_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_SUB_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_SUB_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_SUB_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_SUB_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_3, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_MOV_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_MOV_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_MOV_cg1_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_CMP_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_3, fmt1_CMP_ind_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_CMP_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_CMP_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_CMP_idx_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_CMP_cg1_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> 5,
 (state_3, fmt1_CMP_idx_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_CMP_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_CMP_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIT_ai_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_BIT_ai_idx, R3, GR) -> 3,
 (state_3, fmt1_BIT_ai_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIT_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIT_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_BIT_ind_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_BIT_im2_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> 2,
 (state_3, fmt1_BIT_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIT_cg1_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIT_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_BIT_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIT_rn_idx, GR, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> 1,
 (state_3, fmt1_BIS_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_BIS_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIS_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_BIS_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIS_ind_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIS_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIS_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIS_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_BIS_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_BIS_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIS_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_BIS_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_BIS_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_BIC_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIC_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIC_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIC_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIC_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_BIC_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIC_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIC_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIC_cg1_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIC_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_BIC_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_BIC_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_BIC_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIC_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_AND_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_AND_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_AND_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_AND_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_AND_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_AND_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_AND_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_AND_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_AND_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_AND_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_AND_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_AND_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_AND_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_AND_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_AND_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_AND_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_AND_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_AND_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_AND_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_ADDC_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_ADDC_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_ADDC_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_ADDC_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADDC_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_ADDC_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADDC_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_ADDC_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_ADDC_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_ADDC_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADDC_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_ADD_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_ADD_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_ADD_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_ADD_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_ADD_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADD_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_ADD_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_ADD_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_ADD_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_ADD_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_ADD_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_ADD_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_ADDC_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, jump_JNZ_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_RRA_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRA_idx_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_PUSH_ind_x, GR, Rnone) -> 4,
 (state_1, fmt1_XOR_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_XOR_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_XOR_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_XOR_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_XOR_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_XOR_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_XOR_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_XOR_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_XOR_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_XOR_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_XOR_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_SUBC_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_SUBC_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_SUBC_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_SUBC_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUBC_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_SUBC_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUBC_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_SUBC_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_SUBC_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_SUBC_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUBC_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_SUB_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_SUB_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_SUB_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_SUB_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_SUB_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUB_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_SUB_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_SUB_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_SUB_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_SUB_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_SUB_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_MOV_ai_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_MOV_ai_idx, R3, GR) -> 3,
 (state_1, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_MOV_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_MOV_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_MOV_ind_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_MOV_im2_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_MOV_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_MOV_cg1_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_MOV_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_MOV_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_MOV_rn_idx, GR, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_MOV_rn_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_CMP_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_CMP_ind_idx, GR, GR) -> 4,
 (state_1, fmt1_CMP_ind_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_CMP_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_CMP_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt2_SWPB_ind_x, GR, Rnone) -> 4,
 (state_3, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_3, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_2, fmt2_SWPB_ind_x, GR, Rnone) -> 3,
 (state_2, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_2, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_1, fmt2_SWPB_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_SWPB_idx_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_CALL_im2_x, PC_R0, Rnone) -> 4,
 (state_1, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_ADD_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_ADD_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt2_RRA_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRA_ind_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_1, fmt2_PUSH_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_PUSH_rn_x, R3, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_XOR_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_XOR_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_SUBC_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_SUBC_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUBC_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_SUB_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_SUB_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_MOV_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_MOV_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_MOV_ind_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_MOV_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_1, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_1, fmt1_CMP_ai_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_CMP_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 2,
 (state_1, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_BIT_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_1, fmt1_BIT_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIT_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_1, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_1, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_BIS_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIS_ai_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIS_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_BIC_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIC_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIC_ind_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIC_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_AND_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_AND_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_1, fmt1_ADDC_ai_rn, GR, GR) -> 3,
 (state_1, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_ADDC_ind_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADDC_ind_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_1, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_1, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_1, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_1, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_1, fmt1_ADD_ai_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_ADD_ai_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_1, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_1, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_1, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_1, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_1, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt2_RRA_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_RRA_ind_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_2, fmt2_PUSH_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_PUSH_rn_x, R3, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_XOR_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_XOR_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_SUBC_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_SUBC_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUBC_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_SUB_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUB_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_MOV_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_MOV_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_MOV_ind_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_MOV_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_2, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_2, fmt1_CMP_ai_rn, GR, PC_R0) -> 2,
 (state_2, fmt1_CMP_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_CMP_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 1,
 (state_2, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_BIT_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_2, fmt1_BIT_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIT_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_2, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_BIS_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIS_ai_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIS_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_BIC_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIC_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIC_ind_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIC_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_AND_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_AND_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_2, fmt1_ADDC_ai_rn, GR, GR) -> 2,
 (state_2, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_ADDC_ind_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADDC_ind_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_2, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_2, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_2, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_2, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_2, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_2, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_2, fmt1_ADD_ai_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADD_ai_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_ADD_imm_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_ADD_ind_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_ADD_ind_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADD_ind_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_ADD_idx_rn, GR, SR_R2) -> 3,
 (state_2, fmt1_ADD_cg1_rn, R3, R3) -> 1,
 (state_2, fmt1_ADD_abs_rn, SR_R2, GR) -> 3,
 (state_2, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> 6,
 (state_2, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> 6,
 (state_2, fmt1_ADD_rn_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_ADD_rn_idx, R3, GR) -> 4,
 (state_2, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADD_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt2_RRC_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_RRA_ai_x, GR, Rnone) -> 4,
 (state_3, fmt2_RRA_ind_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_RRA_rn_x, R3, Rnone) -> 1,
 (state_3, fmt2_PUSH_ai_x, GR, Rnone) -> 4,
 (state_3, fmt2_PUSH_rn_x, R3, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_XOR_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_XOR_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_XOR_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_XOR_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_XOR_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_XOR_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_XOR_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_XOR_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_XOR_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_XOR_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_XOR_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_XOR_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_XOR_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_SUBC_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_SUBC_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUBC_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_SUBC_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUBC_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUBC_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_SUBC_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_SUBC_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUBC_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUBC_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_SUBC_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_SUB_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_SUB_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_SUB_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUB_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_SUB_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_SUB_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUB_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUB_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUB_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_SUB_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_SUB_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_SUB_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_SUB_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_SUB_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_MOV_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_MOV_ai_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_MOV_imm_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_MOV_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_MOV_ind_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_MOV_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_MOV_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_MOV_idx_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_MOV_cg1_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_MOV_abs_idx, SR_R2, GR) -> 5,
 (state_3, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_MOV_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_CMP_ai_idx, GR, GR) -> 4,
 (state_3, fmt1_CMP_ai_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_CMP_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_CMP_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_CMP_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_CMP_ind_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_CMP_ind_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_CMP_ind_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_CMP_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_CMP_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_CMP_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_CMP_rn_abs, GR, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_idx, R3, GR) -> 3,
 (state_3, fmt1_CMP_rn_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_CMP_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_BIT_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_BIT_ai_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_BIT_imm_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> 2,
 (state_3, fmt1_BIT_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIT_ind_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIT_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIT_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_BIT_idx_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIT_cg1_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_BIT_abs_idx, SR_R2, GR) -> 5,
 (state_3, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_BIT_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_BIS_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_BIS_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIS_ai_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIS_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIS_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIS_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIS_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIS_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIS_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIS_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_BIS_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_BIS_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_BIS_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIS_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_BIS_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_BIC_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_BIC_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIC_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIC_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIC_ind_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIC_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIC_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIC_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_BIC_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIC_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> 3,
 (state_3, fmt1_BIC_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_BIC_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_AND_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_AND_ai_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_AND_ai_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_AND_imm_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_AND_ind_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_AND_ind_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_AND_ind_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_AND_ind_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_AND_im2_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_AND_idx_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_AND_cg1_rn, R3, R3) -> 1,
 (state_3, fmt1_AND_abs_rn, SR_R2, GR) -> 3,
 (state_3, fmt1_AND_idx_sym, SP_R1, PC_R0) -> 6,
 (state_3, fmt1_AND_sym_idx, PC_R0, SP_R1) -> 6,
 (state_3, fmt1_AND_rn_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_AND_rn_idx, R3, GR) -> 4,
 (state_3, fmt1_AND_rn_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_AND_rn_rn, SP_R1, SR_R2) -> 1,
 (state_3, fmt1_AND_rn_rn, PC_R0, R3) -> 1,
 (state_3, fmt1_ADDC_ai_rn, GR, GR) -> 3,
 (state_3, fmt1_ADDC_ai_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADDC_imm_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_ADDC_ind_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADDC_ind_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADDC_ind_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_ADDC_idx_idx, GR, SP_R1) -> 6,
 (state_3, fmt1_ADDC_cg1_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADDC_abs_idx, SR_R2, GR) -> 6,
 (state_3, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADDC_rn_rn, GR, R3) -> 1,
 (state_3, fmt1_ADDC_rn_rn, R3, GR) -> 1,
 (state_3, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_ADD_ai_idx, GR, GR) -> 5,
 (state_3, fmt1_ADD_ai_rn, R3, SP_R1) -> 1,
 (state_3, jump_JMP_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_3, fmt2_SWPB_ai_x, GR, Rnone) -> 4,
 (state_3, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_3, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_CALL_abs_x, SR_R2, Rnone) -> 5,
 (state_3, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> 5,
 (state_2, jump_JMP_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_2, fmt2_SWPB_ai_x, GR, Rnone) -> 3,
 (state_2, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_2, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_CALL_abs_x, SR_R2, Rnone) -> 5,
 (state_2, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> 5,
 (state_1, jump_JMP_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_SXT_abs_x, SR_R2, Rnone) -> 4,
 (state_1, fmt2_SWPB_ai_x, GR, Rnone) -> 4,
 (state_1, fmt2_SWPB_ind_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_SWPB_rn_x, R3, Rnone) -> 1,
 (state_1, fmt2_CALL_imm_x, PC_R0, Rnone) -> 4,
 (state_1, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> 3,
 (state_3, fmt2_RRC_ind_x, GR, Rnone) -> 4,
 (state_3, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_PUSH_ai_x, R3, Rnone) -> 2,
 (state_3, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_3, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_XOR_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_XOR_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_SUBC_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_SUBC_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_SUBC_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_SUB_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_SUB_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_MOV_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_3, fmt1_MOV_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_MOV_ind_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_MOV_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_3, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_3, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_CMP_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_3, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_3, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_3, fmt1_BIT_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_3, fmt1_BIT_ind_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_BIT_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIT_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_3, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIS_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIS_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIS_cg1_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_BIC_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_BIC_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIC_ind_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_BIC_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_AND_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_AND_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 1,
 (state_3, fmt1_ADDC_ai_rn, GR, R3) -> 3,
 (state_3, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_3, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_3, fmt1_ADDC_ind_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_ADDC_ind_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_3, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_3, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_3, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_3, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_3, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_3, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_3, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_ADD_ai_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_ADD_ind_rn, GR, GR) -> 3,
 (state_3, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_3, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_3, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_PUSH_ai_x, R3, Rnone) -> 3,
 (state_2, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_2, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_XOR_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_SUBC_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_SUBC_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUBC_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_SUB_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_MOV_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_2, fmt1_MOV_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_MOV_ind_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_MOV_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_2, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_2, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 2,
 (state_2, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_CMP_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_2, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_2, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_2, fmt1_BIT_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_2, fmt1_BIT_ind_rn, GR, PC_R0) -> 2,
 (state_2, fmt1_BIT_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIT_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_2, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIS_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_BIS_cg1_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_BIC_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_BIC_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIC_ind_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_BIC_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_AND_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 1,
 (state_2, fmt1_ADDC_ai_rn, GR, R3) -> 2,
 (state_2, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_2, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_2, fmt1_ADDC_ind_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADDC_ind_rn, SP_R1, R3) -> 2,
 (state_2, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_2, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_2, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_2, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_2, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_2, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_2, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_2, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_2, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_ADD_ind_rn, GR, GR) -> 2,
 (state_2, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_2, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_2, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_2, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_2, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 1,
 (state_1, jump_JL_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_RRC_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRC_idx_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_PUSH_ai_x, R3, Rnone) -> 2,
 (state_1, fmt2_PUSH_im2_x, PC_R0, Rnone) -> 3,
 (state_1, fmt2_PUSH_rn_x, SR_R2, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_XOR_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_XOR_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_XOR_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_XOR_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_XOR_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_XOR_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_XOR_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_XOR_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_XOR_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_XOR_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_XOR_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_SUBC_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_SUBC_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_SUBC_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_SUBC_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_SUBC_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUBC_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_SUBC_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_SUBC_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_SUBC_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_SUBC_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_SUBC_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_SUB_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_SUB_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_SUB_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_SUB_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_SUB_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUB_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_SUB_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUB_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_SUB_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_SUB_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_SUB_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUB_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_MOV_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_MOV_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_MOV_ind_idx, GR, GR) -> 4,
 (state_1, fmt1_MOV_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_MOV_ind_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_MOV_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_MOV_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_MOV_idx_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_MOV_cg1_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> 5,
 (state_1, fmt1_MOV_idx_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_MOV_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_CMP_ai_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_CMP_ai_idx, R3, GR) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_CMP_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_CMP_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_CMP_ind_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_CMP_im2_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> 2,
 (state_1, fmt1_CMP_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_CMP_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_CMP_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_CMP_rn_idx, GR, SP_R1) -> 3,
 (state_1, fmt1_CMP_rn_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_CMP_rn_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> 1,
 (state_1, fmt1_BIT_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_BIT_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_BIT_ind_idx, GR, GR) -> 4,
 (state_1, fmt1_BIT_ind_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIT_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIT_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIT_idx_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIT_cg1_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> 5,
 (state_1, fmt1_BIT_idx_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_BIT_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_BIT_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIS_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIS_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIS_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIS_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_BIS_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIS_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_BIS_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIS_cg1_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIS_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_BIS_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_BIS_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_BIS_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIS_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_BIC_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_BIC_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIC_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_BIC_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIC_ind_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_BIC_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIC_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_BIC_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_BIC_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_BIC_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_BIC_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_BIC_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_AND_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_AND_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_AND_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_AND_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_AND_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_AND_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_AND_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_AND_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_AND_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_AND_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_AND_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_AND_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_AND_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_AND_rn_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_AND_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_AND_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_AND_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_ADDC_ai_rn, GR, R3) -> 3,
 (state_1, fmt1_ADDC_ai_rn, R3, GR) -> 1,
 (state_1, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_ADDC_ind_idx, GR, GR) -> 5,
 (state_1, fmt1_ADDC_ind_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_ADDC_ind_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADDC_im2_rn, PC_R0, GR) -> 2,
 (state_1, fmt1_ADDC_idx_sym, GR, PC_R0) -> 6,
 (state_1, fmt1_ADDC_cg1_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> 6,
 (state_1, fmt1_ADDC_idx_idx, SP_R1, GR) -> 6,
 (state_1, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> 3,
 (state_1, fmt1_ADDC_rn_rn, R3, R3) -> 1,
 (state_1, fmt1_ADDC_rn_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_ADD_ai_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_ADD_ai_idx, R3, GR) -> 4,
 (state_1, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_ADD_imm_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_ADD_ind_rn, GR, GR) -> 3,
 (state_1, fmt1_ADD_ind_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADD_im2_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_ADD_idx_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADD_abs_rn, SR_R2, R3) -> 3,
 (state_1, fmt1_ADD_idx_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> 6,
 (state_1, fmt1_ADD_rn_idx, GR, SP_R1) -> 4,
 (state_2, jump_JL_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_ind_x, GR, Rnone) -> 3,
 (state_3, jump_JL_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_3, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_ADD_rn_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADD_rn_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> 2,
 (state_1, fmt1_SUBC_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_MOV_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_BIC_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt1_ADDC_rn_rn, GR, SR_R2) -> 1,
 (state_1, fmt2_SXT_ind_x, GR, Rnone) -> 4,
 (state_1, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_SXT_ind_x, GR, Rnone) -> 4,
 (state_3, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_CALL_ind_x, GR, Rnone) -> 5,
 (state_3, fmt1_MOV_ind_rn, GR, PC_R0) -> 4,
 (state_3, fmt1_MOV_idx_rn, SP_R1, PC_R0) -> 5,
 (state_1, fmt2_CALL_ind_x, GR, Rnone) -> 5,
 (state_1, fmt1_MOV_ind_rn, GR, PC_R0) -> 4,
 (state_2, fmt2_SXT_ind_x, GR, Rnone) -> 3,
 (state_2, fmt2_SXT_idx_x, SP_R1, Rnone) -> 4,
 (state_2, fmt2_CALL_ind_x, GR, Rnone) -> 4,
 (state_2, fmt1_MOV_ind_rn, GR, PC_R0) -> 3,
 (state_2, jump_JNC_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_RRC_rn_x, SP_R1, Rnone) -> 1,
 (state_2, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_PUSH_ind_x, R3, Rnone) -> 3,
 (state_2, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt1_XOR_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_XOR_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_XOR_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_SUBC_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUBC_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_SUB_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_SUB_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUB_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_MOV_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_2, fmt1_MOV_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_2, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_idx, SP_R1, GR) -> 3,
 (state_2, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_CMP_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_2, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_2, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 2,
 (state_2, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_2, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_2, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_2, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_CMP_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_2, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIT_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_2, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_2, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_2, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_2, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_idx, SP_R1, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 1,
 (state_2, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_BIS_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_BIS_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIS_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIC_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_BIC_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIC_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_AND_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_AND_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_AND_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_ADDC_ind_rn, GR, R3) -> 2,
 (state_2, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_2, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_2, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_2, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_2, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_2, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADDC_rn_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_2, fmt1_ADD_ai_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_2, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_2, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 1,
 (state_2, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_2, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_2, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_2, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_2, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_2, fmt1_ADD_rn_rn, GR, SP_R1) -> 1,
 (state_2, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADD_rn_rn, SP_R1, GR) -> 1,
 (state_2, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_3, fmt2_RRC_rn_x, SP_R1, Rnone) -> 1,
 (state_1, fmt1_XOR_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_SUB_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIS_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_AND_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADD_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_PUSH_ind_x, R3, Rnone) -> 2,
 (state_3, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt1_XOR_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_XOR_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_XOR_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_XOR_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUBC_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUBC_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_SUB_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_SUB_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_SUB_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUB_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_MOV_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_3, fmt1_MOV_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_3, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_idx, SP_R1, GR) -> 3,
 (state_3, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_CMP_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_3, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_3, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_3, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_3, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_3, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_CMP_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_3, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIT_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_3, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_3, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_3, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_3, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_3, fmt1_BIT_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_idx, SP_R1, GR) -> 3,
 (state_3, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 1,
 (state_3, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_BIS_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_BIS_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_BIS_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIS_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIC_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_BIC_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIC_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_AND_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_AND_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_AND_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_AND_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADDC_ind_rn, GR, R3) -> 3,
 (state_3, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_3, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_3, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_3, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_3, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_3, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADDC_rn_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 1,
 (state_3, fmt1_ADD_ai_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_3, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_3, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 1,
 (state_3, fmt1_ADD_ind_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_3, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_3, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_3, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_3, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_3, fmt1_ADD_rn_rn, GR, SP_R1) -> 1,
 (state_3, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADD_rn_rn, SP_R1, GR) -> 1,
 (state_3, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, jump_JNC_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, jump_JNC_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_RRC_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_RRC_rn_x, SP_R1, Rnone) -> 2,
 (state_1, fmt2_RRA_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt2_PUSH_ind_x, R3, Rnone) -> 2,
 (state_1, fmt2_PUSH_sym_x, PC_R0, Rnone) -> 4,
 (state_1, fmt1_XOR_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_XOR_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_XOR_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_XOR_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_XOR_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_XOR_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_XOR_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_XOR_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_XOR_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_XOR_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_XOR_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_XOR_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_SUBC_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_SUBC_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_SUBC_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_SUBC_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_SUBC_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_SUBC_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_SUBC_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_SUBC_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_SUBC_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUBC_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUB_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_SUB_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_SUB_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_SUB_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_SUB_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_SUB_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_SUB_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_SUB_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_SUB_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_SUB_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_SUB_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUB_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_MOV_ai_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_MOV_ai_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_MOV_ai_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_MOV_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_MOV_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_MOV_idx_idx, GR, GR) -> 5,
 (state_1, fmt1_MOV_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_MOV_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_MOV_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_MOV_rn_sym, GR, PC_R0) -> 3,
 (state_1, fmt1_MOV_rn_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_MOV_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_CMP_ai_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_CMP_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_CMP_ind_abs, GR, SR_R2) -> 4,
 (state_1, fmt1_CMP_ind_idx, R3, GR) -> 3,
 (state_1, fmt1_CMP_ind_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_CMP_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_CMP_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_CMP_cg1_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> 5,
 (state_1, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_CMP_sym_idx, PC_R0, GR) -> 5,
 (state_1, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_CMP_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_CMP_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_CMP_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> 3,
 (state_1, fmt1_BIT_ai_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_BIT_ai_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_BIT_ai_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIT_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> 3,
 (state_1, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> 4,
 (state_1, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> 4,
 (state_1, fmt1_BIT_idx_idx, GR, GR) -> 5,
 (state_1, fmt1_BIT_idx_rn, GR, PC_R0) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIT_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIT_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_BIT_rn_sym, GR, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIT_rn_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> 2,
 (state_1, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIS_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_BIS_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIS_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIS_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_BIS_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_BIS_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_BIS_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_BIS_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_BIS_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_BIS_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_BIS_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIS_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_BIC_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIC_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIC_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIC_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_BIC_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_BIC_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_BIC_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIC_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_BIC_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_BIC_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_BIC_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIC_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_AND_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_AND_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_AND_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_AND_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_AND_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_AND_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_AND_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_AND_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_AND_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_AND_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_AND_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_AND_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_AND_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_AND_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_AND_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_AND_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_AND_rn_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ai_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_ADDC_ai_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ai_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADDC_ind_rn, GR, R3) -> 3,
 (state_1, fmt1_ADDC_ind_rn, R3, GR) -> 1,
 (state_1, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> 4,
 (state_1, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_ADDC_idx_idx, GR, GR) -> 6,
 (state_1, fmt1_ADDC_cg1_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_ADDC_idx_rn, SP_R1, R3) -> 3,
 (state_1, fmt1_ADDC_sym_rn, PC_R0, GR) -> 3,
 (state_1, fmt1_ADDC_rn_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_ADDC_rn_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADDC_rn_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADD_ai_rn, R3, R3) -> 1,
 (state_1, fmt1_ADD_ai_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_ADD_ind_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_ADD_ind_idx, R3, GR) -> 4,
 (state_1, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> 2,
 (state_1, fmt1_ADD_im2_rn, PC_R0, R3) -> 2,
 (state_1, fmt1_ADD_idx_rn, GR, GR) -> 3,
 (state_1, fmt1_ADD_cg1_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> 6,
 (state_1, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> 6,
 (state_1, fmt1_ADD_sym_idx, PC_R0, GR) -> 6,
 (state_1, fmt1_ADD_rn_rn, GR, SP_R1) -> 2,
 (state_1, fmt1_ADD_rn_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_ADD_rn_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADD_rn_rn, SP_R1, GR) -> 2,
 (state_1, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_3, fmt2_SXT_rn_x, SP_R1, Rnone) -> 1,
 (state_3, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_3, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_3, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_3, fmt1_MOV_rn_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_2, fmt2_SXT_rn_x, SP_R1, Rnone) -> 1,
 (state_2, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_2, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_2, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_1, fmt2_CALL_idx_x, GR, Rnone) -> 5,
 (state_1, fmt1_MOV_idx_rn, GR, PC_R0) -> 5,
 (state_1, fmt2_SXT_idx_x, GR, Rnone) -> 4,
 (state_1, fmt2_SXT_rn_x, SP_R1, Rnone) -> 2,
 (state_1, fmt2_SWPB_sym_x, PC_R0, Rnone) -> 4,
 (state_0, fmt1_ADD_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_XOR_rn_rn, SR_R2, SR_R2) -> 1,
 (state_0, fmt1_SUB_rn_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_ADD_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_ADD_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_ADD_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_ADD_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt2_RRC_ai_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_3, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 2,
 (state_3, fmt2_PUSH_rn_x, GR, Rnone) -> 2,
 (state_3, fmt1_XOR_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_XOR_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_XOR_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_XOR_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_SUB_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_SUB_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_SUB_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_SUB_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_MOV_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_3, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_MOV_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_3, fmt1_CMP_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_3, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_CMP_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_3, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_3, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_3, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_3, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_3, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_3, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_3, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_3, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_3, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_3, fmt1_CMP_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_3, fmt1_CMP_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_3, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_3, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_3, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_3, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 3,
 (state_3, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIT_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_3, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_3, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_3, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_3, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_3, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_3, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_3, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_3, fmt1_BIS_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_BIS_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_BIS_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_BIS_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_BIC_ind_rn, GR, SR_R2) -> 3,
 (state_3, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_3, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_3, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_3, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_3, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_3, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_3, fmt1_BIC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_3, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_3, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_3, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_3, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_3, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_3, fmt1_AND_ai_rn, GR, SP_R1) -> 3,
 (state_3, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_3, fmt1_AND_ai_rn, SP_R1, GR) -> 3,
 (state_3, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_3, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_3, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_3, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_3, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 3,
 (state_3, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_3, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_3, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_3, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_3, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_3, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_3, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_3, fmt1_AND_rn_rn, R3, SP_R1) -> 1,
 (state_3, fmt1_AND_rn_rn, SP_R1, R3) -> 1,
 (state_3, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_3, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_3, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_3, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_3, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_3, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_3, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_3, fmt1_SUBC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_ADDC_idx_rn, SP_R1, SR_R2) -> 3,
 (state_3, fmt1_ADDC_ind_rn, GR, SR_R2) -> 3,
 (state_3, jump_JN_x_x, Rnone, Rnone) -> 3,
 (state_3, fmt1_SUBC_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_SUBC_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_MOV_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIC_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_ADDC_ind_rn, GR, SR_R2) -> 3,
 (state_0, fmt1_BIS_rn_rn, SR_R2, SR_R2) -> 1,
 (state_1, jump_JN_x_x, Rnone, Rnone) -> 3,
 (state_1, fmt2_RRC_ai_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_1, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 2,
 (state_1, fmt2_PUSH_rn_x, GR, Rnone) -> 2,
 (state_1, fmt1_XOR_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_XOR_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_XOR_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_XOR_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_SUB_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_SUB_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_SUB_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_SUB_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_1, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_1, fmt1_CMP_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_1, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_CMP_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_1, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_1, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_1, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_1, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_1, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_1, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_1, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_1, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_1, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_1, fmt1_CMP_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_1, fmt1_CMP_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_1, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_1, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_1, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_1, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 3,
 (state_1, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIT_ind_rn, GR, SR_R2) -> 3,
 (state_1, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_1, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_1, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_1, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_1, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_1, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_1, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_1, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 4,
 (state_1, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_1, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_1, fmt1_BIS_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_BIS_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_BIS_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_BIS_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_AND_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_AND_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_AND_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_AND_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_1, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_1, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_1, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_1, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_1, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_1, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_1, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_1, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_1, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_1, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_1, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_1, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_1, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_1, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_1, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_1, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 5,
 (state_1, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_1, fmt1_ADD_ai_rn, GR, SP_R1) -> 3,
 (state_1, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_1, fmt1_ADD_ai_rn, SP_R1, GR) -> 3,
 (state_1, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_1, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_1, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_1, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_1, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 3,
 (state_1, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_1, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_1, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_1, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_1, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_1, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_1, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_1, fmt1_ADD_rn_rn, R3, SP_R1) -> 2,
 (state_1, fmt1_ADD_rn_rn, SP_R1, R3) -> 2,
 (state_1, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_2, jump_JN_x_x, Rnone, Rnone) -> 2,
 (state_2, fmt2_RRC_ai_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_RRA_rn_x, GR, Rnone) -> 1,
 (state_2, fmt2_PUSH_ind_x, SR_R2, Rnone) -> 3,
 (state_2, fmt2_PUSH_rn_x, GR, Rnone) -> 3,
 (state_2, fmt1_XOR_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_XOR_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_XOR_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_XOR_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_XOR_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_XOR_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_XOR_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_XOR_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_XOR_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_XOR_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_XOR_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_XOR_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_SUBC_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_SUBC_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_SUBC_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_SUBC_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_SUBC_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_SUBC_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_SUBC_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_SUBC_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_SUBC_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_SUBC_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_SUBC_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_SUBC_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_SUB_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_SUB_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_SUB_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_SUB_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_SUB_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_SUB_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_SUB_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_SUB_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_SUB_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_SUB_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_SUB_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_SUB_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_MOV_ai_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_MOV_ai_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_MOV_ai_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_MOV_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_MOV_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_MOV_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_MOV_idx_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_MOV_cg1_idx, R3, GR) -> 3,
 (state_2, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_MOV_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_MOV_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_MOV_rn_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_MOV_rn_idx, PC_R0, GR) -> 3,
 (state_2, fmt1_CMP_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_CMP_ai_rn, R3, SR_R2) -> 1,
 (state_2, fmt1_CMP_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_CMP_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> 4,
 (state_2, fmt1_CMP_ind_idx, GR, SP_R1) -> 4,
 (state_2, fmt1_CMP_ind_abs, R3, SR_R2) -> 3,
 (state_2, fmt1_CMP_ind_idx, SR_R2, GR) -> 3,
 (state_2, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> 1,
 (state_2, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_CMP_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_CMP_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> 5,
 (state_2, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> 5,
 (state_2, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> 5,
 (state_2, fmt1_CMP_rn_idx, GR, GR) -> 3,
 (state_2, fmt1_CMP_rn_rn, GR, PC_R0) -> 1,
 (state_2, fmt1_CMP_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> 1,
 (state_2, fmt1_CMP_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_CMP_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_BIT_ai_sym, GR, PC_R0) -> 4,
 (state_2, fmt1_BIT_ai_idx, R3, SP_R1) -> 3,
 (state_2, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> 3,
 (state_2, fmt1_BIT_ai_idx, SP_R1, GR) -> 4,
 (state_2, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> 2,
 (state_2, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIT_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIT_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_BIT_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> 4,
 (state_2, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> 4,
 (state_2, fmt1_BIT_idx_abs, GR, SR_R2) -> 5,
 (state_2, fmt1_BIT_cg1_idx, R3, GR) -> 3,
 (state_2, fmt1_BIT_cg1_rn, R3, PC_R0) -> 1,
 (state_2, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_BIT_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_BIT_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_BIT_rn_sym, R3, PC_R0) -> 3,
 (state_2, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> 3,
 (state_2, fmt1_BIT_rn_idx, PC_R0, GR) -> 3,
 (state_2, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> 1,
 (state_2, fmt1_BIS_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_BIS_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_BIS_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_BIS_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_BIS_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_BIS_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_BIS_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_BIS_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_BIS_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_BIS_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_BIS_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_BIS_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_BIC_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_BIC_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_BIC_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_BIC_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_BIC_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_BIC_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_BIC_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_BIC_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_BIC_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_BIC_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_BIC_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_BIC_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_AND_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_AND_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_AND_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_AND_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_AND_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_AND_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_AND_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_AND_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_AND_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_AND_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_AND_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_AND_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_AND_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_AND_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_AND_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_AND_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_AND_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_AND_rn_rn, PC_R0, GR) -> 1,
 (state_2, fmt1_ADDC_ai_sym, GR, PC_R0) -> 5,
 (state_2, fmt1_ADDC_ai_idx, R3, SP_R1) -> 4,
 (state_2, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> 4,
 (state_2, fmt1_ADDC_ai_idx, SP_R1, GR) -> 5,
 (state_2, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> 2,
 (state_2, fmt1_ADDC_ind_rn, GR, SR_R2) -> 2,
 (state_2, fmt1_ADDC_ind_rn, R3, R3) -> 1,
 (state_2, fmt1_ADDC_ind_rn, SR_R2, GR) -> 1,
 (state_2, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> 5,
 (state_2, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> 5,
 (state_2, fmt1_ADDC_idx_abs, GR, SR_R2) -> 6,
 (state_2, fmt1_ADDC_cg1_idx, R3, GR) -> 4,
 (state_2, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> 3,
 (state_2, fmt1_ADDC_sym_rn, PC_R0, R3) -> 3,
 (state_2, fmt1_ADDC_rn_rn, GR, GR) -> 1,
 (state_2, fmt1_ADDC_rn_sym, R3, PC_R0) -> 4,
 (state_2, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> 4,
 (state_2, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> 4,
 (state_2, fmt1_ADDC_rn_idx, PC_R0, GR) -> 4,
 (state_2, fmt1_ADD_ai_rn, GR, SP_R1) -> 2,
 (state_2, fmt1_ADD_ai_rn, SR_R2, R3) -> 1,
 (state_2, fmt1_ADD_ai_rn, SP_R1, GR) -> 2,
 (state_2, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> 5,
 (state_2, fmt1_ADD_ind_idx, GR, SP_R1) -> 5,
 (state_2, fmt1_ADD_ind_abs, R3, SR_R2) -> 4,
 (state_2, fmt1_ADD_ind_idx, SR_R2, GR) -> 4,
 (state_2, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> 2,
 (state_2, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> 2,
 (state_2, fmt1_ADD_idx_rn, GR, R3) -> 3,
 (state_2, fmt1_ADD_cg1_rn, R3, GR) -> 1,
 (state_2, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> 6,
 (state_2, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> 6,
 (state_2, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> 6,
 (state_2, fmt1_ADD_rn_idx, GR, GR) -> 4,
 (state_2, fmt1_ADD_rn_rn, R3, SP_R1) -> 1,
 (state_2, fmt1_ADD_rn_rn, SP_R1, R3) -> 1,
 (state_2, fmt1_ADD_rn_rn, PC_R0, GR) -> 1,
 (state_1, fmt2_SXT_ai_x, SP_R1, Rnone) -> 4,
 (state_1, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 (state_3, fmt2_SXT_ai_x, SP_R1, Rnone) -> 4,
 (state_3, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 (state_3, fmt2_RETI_rn_x, PC_R0, Rnone) -> 5,
 (state_3, fmt1_MOV_ai_rn, SP_R1, PC_R0) -> 4,
 (state_2, fmt2_SXT_ai_x, SP_R1, Rnone) -> 3,
 (state_2, fmt2_SWPB_rn_x, GR, Rnone) -> 1,
 else -> 4]""",
'state_fn_default' :
"""[(state_0, fmt1_CMP_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_AND_ai_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_AND_ai_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_AND_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ai_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_BIS_ai_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_BIS_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_im2_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_AND_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_SUBC_ai_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, R3, GR) -> state_3,
 (state_0, fmt1_SUBC_ai_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ai_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_SUB_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, GR, GR) -> state_3,
 (state_0, fmt1_BIC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_SUB_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_BIC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, R3, GR) -> state_3,
 (state_0, fmt1_ADD_ai_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADD_ai_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_BIC_ai_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_XOR_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_cg1_idx, R3, GR) -> state_3,
 (state_0, fmt1_AND_cg1_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_AND_cg1_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_AND_cg1_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_XOR_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_cg1_idx, R3, GR) -> state_3,
 (state_0, fmt1_XOR_cg1_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADD_rn_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_ADD_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_cg1_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_SUB_rn_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_SUB_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, GR, GR) -> state_3,
 (state_0, fmt1_SUBC_ai_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ai_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_BIT_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, R3, GR) -> state_3,
 (state_0, fmt1_AND_ai_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_AND_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_ADD_ind_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_ADD_ind_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_ADD_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_AND_im2_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_AND_im2_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_AND_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_ai_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_cg1_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_XOR_cg1_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_AND_ind_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_AND_ind_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_AND_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ai_idx, R3, GR) -> state_3,
 (state_0, fmt1_XOR_ai_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_XOR_ai_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_CMP_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_im2_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_AND_im2_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_MOV_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_ai_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_XOR_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADD_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ind_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADD_ind_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_ADD_ind_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_CMP_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_AND_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, GR, GR) -> state_3,
 (state_0, fmt1_ADDC_ind_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_ind_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_BIC_ind_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_BIC_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, R3, GR) -> state_3,
 (state_0, fmt1_ADDC_ind_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_ind_idx, R3, SP_R1) -> state_3,
 (state_0, fmt2_RRC_abs_x, SR_R2, Rnone) -> state_3,
 (state_0, fmt2_RRC_idx_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_RRC_sym_x, PC_R0, Rnone) -> state_3,
 (state_0, fmt1_ADD_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_MOV_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_XOR_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_idx, GR, GR) -> state_3,
 (state_0, fmt1_SUB_ind_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_SUB_ind_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_SUB_ind_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_CMP_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_BIS_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_cg1_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_rn_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_XOR_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, GR, GR) -> state_3,
 (state_0, fmt1_AND_ai_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_AND_ai_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_BIT_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ind_idx, GR, GR) -> state_3,
 (state_0, fmt1_XOR_ind_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_XOR_ind_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_SUB_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_XOR_rn_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_XOR_rn_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_BIS_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt2_PUSH_idx_x, GR, Rnone) -> state_1,
 (state_0, fmt2_PUSH_cg1_x, R3, Rnone) -> state_2,
 (state_0, fmt2_PUSH_abs_x, SR_R2, Rnone) -> state_1,
 (state_0, fmt2_PUSH_sym_x, PC_R0, Rnone) -> state_1,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, GR, GR) -> state_3,
 (state_0, fmt1_BIC_ind_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_BIC_ind_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_SUBC_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, R3, GR) -> state_3,
 (state_0, fmt1_SUBC_rn_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUB_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_im2_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, GR, GR) -> state_3,
 (state_0, fmt1_ADD_rn_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_MOV_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_AND_ai_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_AND_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_cg1_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_cg1_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_BIT_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_rn_idx, GR, GR) -> state_3,
 (state_0, fmt1_BIC_rn_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_XOR_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_abs_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_CMP_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_ai_idx, GR, GR) -> state_3,
 (state_0, fmt1_BIS_ai_abs, GR, SR_R2) -> state_3,
 (state_0, fmt2_RRA_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_RRA_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RETI_rn_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ai_x, GR, Rnone) -> state_1,
 (state_0, fmt2_PUSH_ai_x, R3, Rnone) -> state_2,
 (state_0, fmt1_AND_ind_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_AND_ind_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_CMP_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_rn_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_rn_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_abs_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_SUB_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_ADD_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_SUBC_rn_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_rn_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_SUBC_rn_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_MOV_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_BIS_ind_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIS_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt2_SWPB_ind_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_SWPB_idx_x, GR, Rnone) -> state_3,
 (state_0, fmt2_SWPB_abs_x, SR_R2, Rnone) -> state_3,
 (state_0, fmt2_SWPB_idx_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_SWPB_sym_x, PC_R0, Rnone) -> state_3,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_SUBC_rn_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_rn_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_rn_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_rn_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIT_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, GR, GR) -> state_3,
 (state_0, fmt1_BIS_ind_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_AND_rn_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_AND_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_idx, GR, GR) -> state_3,
 (state_0, fmt1_BIS_rn_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_BIS_rn_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, R3, GR) -> state_3,
 (state_0, fmt2_SXT_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_SXT_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_SWPB_ai_x, GR, Rnone) -> state_3,
 (state_0, fmt2_SWPB_ai_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_SWPB_ind_x, GR, Rnone) -> state_3,
 (state_0, fmt1_ADDC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_SUB_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_ADD_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_ADD_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ai_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_ai_idx, GR, GR) -> state_3,
 (state_0, fmt1_ADD_ai_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_ADD_ai_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_CMP_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_AND_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_BIC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_imm_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_AND_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_XOR_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_AND_ai_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_AND_ai_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_CMP_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_BIS_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_rn_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_AND_rn_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_AND_rn_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUB_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_cg1_idx, R3, GR) -> state_3,
 (state_0, fmt1_SUB_cg1_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_ADD_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, jump_JZ_x_x, Rnone, Rnone) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUB_rn_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_CMP_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_ADD_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_XOR_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, R3, GR) -> state_3,
 (state_0, fmt1_XOR_rn_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_AND_rn_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_AND_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_AND_ind_idx, R3, GR) -> state_3,
 (state_0, fmt1_AND_ind_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_BIC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, jump_JL_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JGE_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JC_x_x, Rnone, Rnone) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_MOV_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_CMP_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_ai_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_SUB_ai_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_SUB_ai_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_BIS_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_idx, R3, GR) -> state_3,
 (state_0, fmt1_CMP_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt2_SXT_ai_x, GR, Rnone) -> state_3,
 (state_0, fmt2_SXT_ai_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_SXT_ind_x, GR, Rnone) -> state_3,
 (state_0, fmt2_SXT_ind_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_SXT_idx_x, GR, Rnone) -> state_3,
 (state_0, fmt1_BIT_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_CMP_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_BIC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, GR, GR) -> state_3,
 (state_0, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_BIT_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, R3, GR) -> state_3,
 (state_0, fmt1_XOR_ind_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_XOR_ind_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_XOR_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_BIS_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_ind_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_AND_ind_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_MOV_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, PC_R0) -> state_0,
 (state_0, fmt2_SWPB_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_SWPB_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_SWPB_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRC_ai_x, GR, Rnone) -> state_3,
 (state_0, fmt2_RRC_ai_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt1_BIT_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_AND_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_BIT_ai_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_MOV_rn_rn, GR, R3) -> state_0,
 (state_0, fmt2_PUSH_rn_x, R3, Rnone) -> state_2,
 (state_0, fmt2_PUSH_rn_x, SR_R2, Rnone) -> state_2,
 (state_0, fmt2_PUSH_rn_x, SP_R1, Rnone) -> state_2,
 (state_0, fmt2_PUSH_rn_x, PC_R0, Rnone) -> state_2,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_BIC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_BIC_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, R3, GR) -> state_3,
 (state_0, fmt1_BIC_rn_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_ADD_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, GR, GR) -> state_3,
 (state_0, fmt1_AND_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_MOV_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_ADD_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_XOR_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_SUB_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_im2_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_SUB_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ai_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_BIT_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, R3, GR) -> state_3,
 (state_0, fmt1_SUBC_ind_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ind_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_XOR_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_BIC_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_ind_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_AND_ind_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIT_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_SUB_rn_idx, GR, GR) -> state_3,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_im2_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_AND_rn_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_AND_rn_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_XOR_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_AND_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, R3, GR) -> state_3,
 (state_0, fmt1_MOV_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt2_PUSH_imm_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_PUSH_ind_x, GR, Rnone) -> state_1,
 (state_0, fmt2_PUSH_ind_x, R3, Rnone) -> state_2,
 (state_0, fmt2_PUSH_ind_x, SR_R2, Rnone) -> state_2,
 (state_0, fmt1_BIC_cg1_idx, R3, GR) -> state_3,
 (state_0, fmt1_BIC_cg1_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_BIC_cg1_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_ADD_rn_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADD_rn_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_AND_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_AND_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_imm_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_SUB_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_imm_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_BIC_rn_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_im2_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_ADD_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIT_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_rn_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_BIC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_AND_imm_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_BIT_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ind_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, GR, GR) -> state_3,
 (state_0, fmt1_ADDC_ai_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_ai_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_ai_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_ai_idx, GR, GR) -> state_3,
 (state_0, fmt1_XOR_ai_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_XOR_ai_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_AND_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_SUB_rn_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_MOV_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIC_cg1_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIC_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_CMP_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_XOR_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_XOR_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUBC_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_idx, GR, GR) -> state_3,
 (state_0, fmt1_AND_rn_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_cg1_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_cg1_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_BIC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_BIS_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_MOV_ai_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_BIS_ind_idx, R3, GR) -> state_3,
 (state_0, fmt1_BIS_ind_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_cg1_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_ADD_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_BIT_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_XOR_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_ai_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_cg1_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_SUB_cg1_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_SUB_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt2_RRC_ind_x, GR, Rnone) -> state_3,
 (state_0, fmt2_RRC_ind_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt1_BIC_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, jump_JNC_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JN_x_x, Rnone, Rnone) -> state_0,
 (state_0, jump_JMP_x_x, Rnone, Rnone) -> state_0,
 (state_0, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_BIS_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_ind_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_AND_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_AND_rn_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, GR, GR) -> state_0,
 (state_0, fmt1_CMP_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_SUBC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_CMP_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, GR, GR) -> state_3,
 (state_0, fmt1_SUB_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_imm_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_SUB_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_BIS_ai_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_CMP_ai_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ai_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_ai_idx, R3, GR) -> state_3,
 (state_0, fmt1_SUB_ai_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUB_ai_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_SUB_ai_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_BIT_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, PC_R0, GR) -> state_0,
 (state_0, fmt2_CALL_ai_x, GR, Rnone) -> state_0,
 (state_0, fmt2_CALL_imm_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_CALL_ind_x, GR, Rnone) -> state_0,
 (state_0, fmt2_CALL_im2_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_CALL_idx_x, GR, Rnone) -> state_0,
 (state_0, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_XOR_idx_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_ai_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_ADD_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_SUB_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_ADD_ind_idx, GR, GR) -> state_3,
 (state_0, fmt1_ADD_ind_abs, GR, SR_R2) -> state_3,
 (state_0, fmt2_PUSH_rn_x, GR, Rnone) -> state_2,
 (state_0, fmt1_BIC_rn_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_BIS_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt2_PUSH_ai_x, SR_R2, Rnone) -> state_2,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_SUB_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_MOV_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_idx_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_rn_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_AND_rn_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_imm_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_MOV_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_XOR_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_CMP_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_ADD_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_BIS_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, R3, GR) -> state_3,
 (state_0, fmt1_BIT_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_ADDC_ind_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt2_RRC_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt2_RRC_rn_x, R3, Rnone) -> state_0,
 (state_0, fmt2_RRC_rn_x, SP_R1, Rnone) -> state_0,
 (state_0, fmt2_RRA_ai_x, GR, Rnone) -> state_3,
 (state_0, fmt2_PUSH_im2_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt1_MOV_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_MOV_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_BIC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_BIC_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_ind_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_SUB_ind_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_SUB_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUB_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_BIC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_AND_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt2_RRA_ai_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_RRA_ind_x, GR, Rnone) -> state_3,
 (state_0, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_AND_rn_idx, R3, GR) -> state_3,
 (state_0, fmt1_AND_rn_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_AND_rn_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_MOV_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, SP_R1, GR) -> state_3,
 (state_0, fmt2_SXT_abs_x, SR_R2, Rnone) -> state_3,
 (state_0, fmt2_SXT_idx_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_SXT_sym_x, PC_R0, Rnone) -> state_3,
 (state_0, fmt2_SXT_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_AND_rn_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_BIT_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_SUB_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_AND_ind_idx, GR, GR) -> state_3,
 (state_0, fmt1_AND_ind_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_CMP_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUBC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_cg1_idx, R3, GR) -> state_3,
 (state_0, fmt1_XOR_ind_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_MOV_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_AND_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_MOV_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUBC_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_sym_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIS_rn_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_BIS_rn_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIS_rn_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_XOR_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_BIC_ind_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_BIT_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_MOV_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_BIC_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_AND_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_BIT_ai_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_ADD_cg1_idx, R3, GR) -> state_3,
 (state_0, fmt1_ADD_cg1_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADD_cg1_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_ADD_cg1_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ind_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_AND_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt2_CALL_abs_x, SR_R2, Rnone) -> state_0,
 (state_0, fmt2_CALL_sym_x, PC_R0, Rnone) -> state_0,
 (state_0, fmt2_CALL_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt1_ADDC_sym_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, GR, GR) -> state_3,
 (state_0, fmt1_AND_rn_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_BIC_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_sym, GR, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_BIT_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, GR) -> state_0,
 (state_0, fmt1_MOV_ind_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_BIC_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_XOR_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_ai_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_ADDC_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_ADD_im2_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_SUB_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIC_idx_idx, GR, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIS_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_SUB_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_MOV_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_BIT_im2_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_imm_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_AND_imm_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_AND_imm_rn, PC_R0, GR) -> state_0,
 (state_0, fmt2_RRA_idx_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt2_RRA_sym_x, PC_R0, Rnone) -> state_3,
 (state_0, fmt2_RRA_rn_x, GR, Rnone) -> state_0,
 (state_0, fmt1_AND_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_AND_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ai_rn, R3, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, R3, GR) -> state_3,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIT_rn_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_sym, R3, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_ind_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_ADD_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_MOV_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIC_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt2_RRA_idx_x, GR, Rnone) -> state_3,
 (state_0, fmt2_RRA_abs_x, SR_R2, Rnone) -> state_3,
 (state_0, fmt1_ADD_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_CMP_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_CMP_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_AND_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_ai_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_AND_imm_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_BIC_ai_abs, GR, SR_R2) -> state_3,
 (state_0, fmt1_BIC_ai_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_BIC_ai_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_XOR_ai_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_XOR_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, R3) -> state_0,
 (state_0, fmt1_BIC_ai_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_idx_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_ADD_ai_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_MOV_cg1_idx, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_BIS_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, GR, GR) -> state_3,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADD_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_MOV_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_XOR_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_AND_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt2_RRA_ind_x, SP_R1, Rnone) -> state_3,
 (state_0, fmt1_MOV_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_ind_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_CMP_sym_idx, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_CMP_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_CMP_sym_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_BIT_rn_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_idx_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_SUB_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_ADDC_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, jump_JNZ_x_x, Rnone, Rnone) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_BIT_im2_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_SUB_rn_idx, R3, GR) -> state_3,
 (state_0, fmt1_ADD_cg1_rn, R3, R3) -> state_0,
 (state_0, fmt1_ADD_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_ADD_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_CMP_cg1_rn, R3, PC_R0) -> state_0,
 (state_0, fmt1_SUBC_ind_idx, R3, GR) -> state_3,
 (state_0, fmt1_SUBC_ind_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ind_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_cg1_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_cg1_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_MOV_ai_idx, GR, GR) -> state_0,
 (state_0, fmt1_MOV_ai_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ai_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_sym_abs, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_ADD_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_BIC_ai_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_BIC_ai_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_BIS_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_XOR_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_ADD_cg1_rn, R3, GR) -> state_0,
 (state_0, fmt1_XOR_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_MOV_sym_rn, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_idx, GR, GR) -> state_0,
 (state_0, fmt1_XOR_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_imm_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_SUB_rn_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_idx_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_AND_idx_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIS_ind_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ind_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_im2_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_MOV_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_MOV_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_AND_ind_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_AND_ind_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_CMP_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_CMP_idx_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_cg1_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_BIS_cg1_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_BIS_cg1_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIS_cg1_idx, R3, GR) -> state_3,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_XOR_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_AND_rn_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIS_rn_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIS_ai_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_CMP_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_BIS_ind_rn, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_XOR_rn_idx, R3, SP_R1) -> state_3,
 (state_0, fmt1_BIC_ai_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, SP_R1, GR) -> state_3,
 (state_0, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUBC_ai_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_BIT_ind_rn, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_BIT_ind_idx, SP_R1, GR) -> state_0,
 (state_0, fmt1_SUB_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ind_idx, R3, GR) -> state_3,
 (state_0, fmt1_MOV_ai_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADDC_cg1_idx, R3, GR) -> state_3,
 (state_0, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> state_3,
 (state_0, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_ADD_rn_idx, GR, SP_R1) -> state_3,
 (state_0, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_CMP_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_rn_rn, PC_R0, R3) -> state_0,
 (state_0, fmt1_BIC_rn_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, SR_R2, GR) -> state_3,
 (state_0, fmt1_SUBC_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_XOR_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_XOR_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_MOV_ind_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_MOV_ai_abs, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ai_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIS_ai_rn, R3, GR) -> state_0,
 (state_0, fmt1_SUBC_ind_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_ADDC_ind_sym, R3, PC_R0) -> state_3,
 (state_0, fmt1_BIT_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt2_RRC_idx_x, GR, Rnone) -> state_3,
 (state_0, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> state_3,
 (state_0, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_MOV_ind_rn, GR, PC_R0) -> state_0,
 (state_0, fmt1_MOV_ind_idx, R3, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_BIT_ind_rn, GR, R3) -> state_0,
 (state_0, fmt1_XOR_ind_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_XOR_ind_rn, GR, GR) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, R3) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_CMP_ind_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_ADD_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_ADD_rn_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_ADD_idx_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> state_3,
 (state_0, fmt1_BIS_rn_rn, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_0, fmt1_CMP_ai_rn, SP_R1, GR) -> state_0,
 (state_0, fmt1_BIT_rn_abs, GR, SR_R2) -> state_0,
 (state_0, fmt1_BIT_rn_idx, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_abs_rn, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_AND_ai_sym, GR, PC_R0) -> state_3,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> state_3,
 (state_0, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> state_3,
 (state_0, fmt1_BIC_ai_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_BIC_ai_idx, R3, GR) -> state_3,
 (state_0, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> state_3,
 (state_0, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_BIC_rn_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIC_rn_idx, PC_R0, GR) -> state_3,
 (state_0, fmt1_SUBC_sym_sym, PC_R0, PC_R0) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, SR_R2) -> state_0,
 (state_0, fmt1_BIS_ind_rn, R3, SP_R1) -> state_0,
 (state_0, fmt1_BIT_idx_abs, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> state_3,
 (state_0, fmt1_SUBC_rn_rn, PC_R0, GR) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SR_R2) -> state_0,
 (state_0, fmt1_ADDC_imm_rn, PC_R0, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SR_R2) -> state_0,
 (state_0, fmt1_ADD_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_BIS_sym_idx, PC_R0, GR) -> state_0,
 (state_0, fmt1_CMP_abs_idx, SR_R2, GR) -> state_0,
 (state_0, fmt1_CMP_abs_abs, SR_R2, SR_R2) -> state_0,
 (state_0, fmt1_SUB_ind_abs, R3, SR_R2) -> state_3,
 (state_0, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> state_3,
 (state_0, fmt1_ADD_ind_rn, GR, SP_R1) -> state_0,
 (state_0, fmt1_ADD_ind_idx, R3, GR) -> state_3,
 (state_0, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> state_3,
 (state_0, fmt1_CMP_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_abs_sym, SR_R2, PC_R0) -> state_0,
 (state_0, fmt1_ADDC_ai_rn, SP_R1, SP_R1) -> state_0,
 (state_0, fmt1_XOR_idx_rn, GR, R3) -> state_0,
 (state_0, fmt1_AND_abs_idx, SR_R2, SP_R1) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, R3) -> state_0,
 (state_0, fmt1_CMP_idx_rn, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_BIS_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIS_cg1_idx, R3, GR) -> state_0,
 (state_3, fmt1_BIS_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIS_cg1_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_BIS_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIS_cg1_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_BIS_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIS_cg1_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_BIS_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIS_rn_idx, GR, GR) -> state_0,
 (state_3, fmt1_BIS_rn_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_BIS_rn_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_BIS_rn_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_BIS_rn_idx, R3, GR) -> state_0,
 (state_3, fmt1_BIS_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIS_rn_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_BIS_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIS_rn_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_BIS_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIS_rn_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_BIS_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIS_rn_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIS_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_BIS_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIS_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_BIS_rn_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_BIS_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_BIS_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_BIS_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_BIS_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIS_rn_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIS_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIS_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIS_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_BIC_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIC_ai_idx, GR, GR) -> state_0,
 (state_3, fmt1_BIC_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ai_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_BIC_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ai_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_BIC_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ai_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_BIC_ai_idx, R3, GR) -> state_0,
 (state_3, fmt1_BIC_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ai_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_BIC_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ai_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_BIC_ai_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_BIC_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIC_ai_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_BIC_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIC_ai_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_BIC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_BIC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_BIC_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIC_imm_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_BIC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_BIC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_BIC_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIC_ind_idx, GR, GR) -> state_0,
 (state_3, fmt1_BIC_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ind_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_BIC_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ind_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_BIC_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ind_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_BIC_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIC_ind_idx, R3, GR) -> state_0,
 (state_3, fmt1_BIC_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ind_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_BIC_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ind_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_BIC_ind_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_BIC_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIC_ind_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_BIC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUBC_im2_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUBC_cg1_idx, R3, GR) -> state_0,
 (state_3, fmt1_SUBC_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_cg1_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_cg1_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_cg1_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, GR, GR) -> state_0,
 (state_3, fmt1_SUBC_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_rn_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_rn_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, R3, GR) -> state_0,
 (state_3, fmt1_SUBC_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_rn_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_rn_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_SUBC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_SUBC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_SUB_ai_idx, GR, GR) -> state_0,
 (state_3, fmt1_SUB_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ai_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_SUB_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ai_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_SUB_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ai_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_SUB_ai_idx, R3, GR) -> state_0,
 (state_3, fmt1_SUB_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ai_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_SUB_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ai_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_SUB_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ai_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_SUB_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUB_ai_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_SUB_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUB_ai_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_SUB_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_SUB_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUB_imm_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUB_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUB_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUB_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_SUB_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUB_ind_idx, GR, GR) -> state_0,
 (state_3, fmt1_SUB_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ind_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_SUB_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ind_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_SUB_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ind_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_SUB_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUB_ind_idx, R3, GR) -> state_0,
 (state_3, fmt1_SUB_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ind_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_SUB_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ind_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_SUB_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ind_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_SUB_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUB_ind_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_SUB_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUB_ind_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUB_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUB_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUB_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_SUB_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUB_im2_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUB_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUB_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUB_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_SUB_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUB_cg1_idx, R3, GR) -> state_0,
 (state_3, fmt1_SUB_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUB_cg1_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_SUB_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUB_cg1_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_SUB_cg1_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_SUB_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUB_rn_idx, GR, GR) -> state_0,
 (state_3, fmt1_SUB_rn_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_SUB_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_SUB_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_SUB_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUB_rn_idx, R3, GR) -> state_0,
 (state_3, fmt1_SUB_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUB_rn_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_SUB_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_SUB_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_SUB_rn_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUB_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_SUB_rn_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_SUB_rn_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_SUB_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_SUB_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_SUB_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_SUB_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUB_rn_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUB_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUB_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUB_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt2_SXT_ai_x, GR, Rnone) -> state_2,
 (state_2, fmt2_SXT_ai_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SXT_ai_x, GR, Rnone) -> state_0,
 (state_3, fmt2_SXT_ai_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_SXT_ind_x, GR, Rnone) -> state_0,
 (state_3, fmt2_SXT_ind_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_SXT_idx_x, GR, Rnone) -> state_1,
 (state_1, fmt2_SXT_idx_x, GR, Rnone) -> state_0,
 (state_3, fmt2_SXT_abs_x, SR_R2, Rnone) -> state_1,
 (state_1, fmt2_SXT_abs_x, SR_R2, Rnone) -> state_0,
 (state_3, fmt2_SXT_idx_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SXT_idx_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_SXT_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_SXT_sym_x, PC_R0, Rnone) -> state_0,
 (state_3, fmt2_SWPB_ai_x, GR, Rnone) -> state_0,
 (state_3, fmt2_SWPB_ai_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_SWPB_ind_x, GR, Rnone) -> state_0,
 (state_3, fmt2_SWPB_ind_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_SWPB_idx_x, GR, Rnone) -> state_0,
 (state_3, fmt2_SWPB_abs_x, SR_R2, Rnone) -> state_1,
 (state_1, fmt2_SWPB_abs_x, SR_R2, Rnone) -> state_0,
 (state_3, fmt2_SWPB_idx_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_SWPB_idx_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_SWPB_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_SWPB_sym_x, PC_R0, Rnone) -> state_0,
 (state_3, fmt2_RRC_ai_x, GR, Rnone) -> state_0,
 (state_3, fmt2_RRC_ai_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_RRC_ind_x, GR, Rnone) -> state_0,
 (state_3, fmt2_RRC_ind_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_RRC_idx_x, GR, Rnone) -> state_0,
 (state_3, fmt2_RRC_abs_x, SR_R2, Rnone) -> state_1,
 (state_1, fmt2_RRC_abs_x, SR_R2, Rnone) -> state_0,
 (state_3, fmt2_RRC_idx_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRC_idx_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_RRC_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_RRC_sym_x, PC_R0, Rnone) -> state_0,
 (state_3, fmt2_RRA_ai_x, GR, Rnone) -> state_0,
 (state_3, fmt2_RRA_ai_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_RRA_ind_x, GR, Rnone) -> state_0,
 (state_3, fmt2_RRA_ind_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_RRA_idx_x, GR, Rnone) -> state_0,
 (state_3, fmt2_RRA_abs_x, SR_R2, Rnone) -> state_0,
 (state_3, fmt2_RRA_idx_x, SP_R1, Rnone) -> state_1,
 (state_1, fmt2_RRA_idx_x, SP_R1, Rnone) -> state_0,
 (state_3, fmt2_RRA_sym_x, PC_R0, Rnone) -> state_1,
 (state_1, fmt2_RRA_sym_x, PC_R0, Rnone) -> state_0,
 (state_1, fmt2_PUSH_ai_x, GR, Rnone) -> state_0,
 (state_2, fmt2_PUSH_ai_x, R3, Rnone) -> state_0,
 (state_2, fmt2_PUSH_ai_x, SR_R2, Rnone) -> state_0,
 (state_1, fmt2_PUSH_ind_x, GR, Rnone) -> state_0,
 (state_2, fmt2_PUSH_ind_x, R3, Rnone) -> state_0,
 (state_2, fmt2_PUSH_ind_x, SR_R2, Rnone) -> state_0,
 (state_1, fmt2_PUSH_idx_x, GR, Rnone) -> state_2,
 (state_2, fmt2_PUSH_idx_x, GR, Rnone) -> state_0,
 (state_2, fmt2_PUSH_cg1_x, R3, Rnone) -> state_0,
 (state_1, fmt2_PUSH_abs_x, SR_R2, Rnone) -> state_0,
 (state_1, fmt2_PUSH_sym_x, PC_R0, Rnone) -> state_2,
 (state_2, fmt2_PUSH_sym_x, PC_R0, Rnone) -> state_0,
 (state_2, fmt2_PUSH_rn_x, GR, Rnone) -> state_0,
 (state_2, fmt2_PUSH_rn_x, R3, Rnone) -> state_0,
 (state_2, fmt2_PUSH_rn_x, SR_R2, Rnone) -> state_0,
 (state_2, fmt2_PUSH_rn_x, SP_R1, Rnone) -> state_0,
 (state_2, fmt2_PUSH_rn_x, PC_R0, Rnone) -> state_0,
 (state_3, fmt1_XOR_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_XOR_ai_idx, GR, GR) -> state_0,
 (state_3, fmt1_XOR_ai_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_XOR_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ai_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_XOR_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ai_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_XOR_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_XOR_ai_idx, R3, GR) -> state_0,
 (state_3, fmt1_XOR_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ai_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_XOR_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ai_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_XOR_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ai_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_XOR_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_XOR_ai_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_XOR_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_XOR_ai_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_XOR_imm_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_XOR_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_XOR_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_XOR_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_XOR_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_XOR_ind_idx, GR, GR) -> state_0,
 (state_3, fmt1_XOR_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ind_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_XOR_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ind_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_XOR_ind_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_XOR_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_XOR_ind_idx, R3, GR) -> state_0,
 (state_3, fmt1_XOR_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ind_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_XOR_ind_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_XOR_ind_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_XOR_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_XOR_ind_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_XOR_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_XOR_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_XOR_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_XOR_ind_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_XOR_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_XOR_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_XOR_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_XOR_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_XOR_im2_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_XOR_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_XOR_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_XOR_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_ADD_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_ADD_ai_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_ADD_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADD_imm_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADD_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADD_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_ADD_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_ADD_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_ADD_ind_idx, GR, GR) -> state_0,
 (state_3, fmt1_ADD_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ind_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_ADD_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ind_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_ADD_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ind_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_ADD_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADD_ind_idx, R3, GR) -> state_0,
 (state_3, fmt1_ADD_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ind_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_ADD_ind_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_ADD_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ind_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_ADD_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADD_ind_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_ADD_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_ADD_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_ADD_ind_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_ADD_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_ADD_im2_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADD_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADD_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADD_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_ADD_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADD_cg1_idx, R3, GR) -> state_0,
 (state_3, fmt1_ADD_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADD_cg1_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_ADD_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADD_cg1_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_ADD_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADD_cg1_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_ADD_rn_idx, GR, GR) -> state_0,
 (state_3, fmt1_ADD_rn_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_ADD_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_ADD_rn_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_ADD_rn_idx, R3, GR) -> state_0,
 (state_3, fmt1_ADD_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_ADD_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_ADD_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADD_rn_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_ADD_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADD_rn_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADD_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_ADD_rn_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_ADD_rn_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_ADD_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> state_2,
 (state_2, fmt1_ADD_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_ADD_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_ADD_rn_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADD_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADD_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADD_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_AND_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_AND_ind_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_AND_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_AND_ind_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_AND_ind_idx, R3, GR) -> state_0,
 (state_3, fmt1_AND_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_AND_ind_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_AND_ind_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_AND_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_AND_ind_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_AND_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_AND_ind_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_AND_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_AND_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_AND_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_AND_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_AND_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_AND_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_AND_ind_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_AND_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_AND_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_AND_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_AND_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_AND_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_AND_im2_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_AND_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_AND_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_AND_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_AND_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_AND_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_AND_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_AND_cg1_idx, R3, GR) -> state_1,
 (state_1, fmt1_AND_cg1_idx, R3, GR) -> state_0,
 (state_3, fmt1_AND_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_AND_cg1_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_AND_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_AND_cg1_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_AND_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_AND_cg1_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_AND_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_AND_rn_idx, GR, GR) -> state_0,
 (state_3, fmt1_AND_rn_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_AND_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_AND_rn_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_AND_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_AND_rn_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_AND_rn_idx, R3, GR) -> state_0,
 (state_3, fmt1_AND_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_AND_rn_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_AND_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_AND_rn_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_AND_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_AND_rn_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_AND_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_AND_rn_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_AND_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_AND_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_AND_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_AND_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_AND_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_AND_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_AND_rn_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_AND_rn_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_AND_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_AND_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_AND_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_AND_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_AND_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_AND_rn_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_AND_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_AND_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_AND_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_AND_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, GR, GR) -> state_0,
 (state_3, fmt1_ADDC_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ai_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ai_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, R3, GR) -> state_0,
 (state_3, fmt1_ADDC_ai_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_ai_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ai_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_ai_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_imm_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_ind_idx, GR, GR) -> state_0,
 (state_3, fmt1_ADDC_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ind_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_ind_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, R3, GR) -> state_0,
 (state_3, fmt1_ADDC_ind_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ind_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_ind_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADDC_im2_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_cg1_idx, R3, GR) -> state_0,
 (state_3, fmt1_ADDC_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_cg1_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_cg1_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_cg1_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, GR, GR) -> state_0,
 (state_3, fmt1_ADDC_rn_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_rn_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, R3, GR) -> state_0,
 (state_3, fmt1_ADDC_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADDC_rn_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_rn_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_ADDC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_ADDC_rn_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_ADDC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_ADDC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_ADDC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_ADDC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_ADDC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_ADD_ai_idx, GR, GR) -> state_0,
 (state_3, fmt1_ADD_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ai_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_ADD_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ai_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_ADD_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ai_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_ADD_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_ADD_ai_idx, R3, GR) -> state_0,
 (state_3, fmt1_ADD_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_ADD_ai_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_ADD_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ai_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_ADD_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ai_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_ADD_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_ADD_ai_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_ADD_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_ADD_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_ADD_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_BIC_ind_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_BIC_im2_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_BIC_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIC_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIC_im2_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_BIC_cg1_idx, R3, GR) -> state_0,
 (state_3, fmt1_BIC_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIC_cg1_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_BIC_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIC_cg1_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_BIC_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIC_cg1_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_BIC_rn_idx, GR, GR) -> state_0,
 (state_3, fmt1_BIC_rn_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_BIC_rn_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIC_rn_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_BIC_rn_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIC_rn_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_BIC_rn_idx, R3, GR) -> state_0,
 (state_3, fmt1_BIC_rn_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_BIC_rn_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_BIC_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIC_rn_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_BIC_rn_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIC_rn_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_BIC_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIC_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_BIC_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_BIC_rn_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> state_2,
 (state_2, fmt1_BIC_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_BIC_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_BIC_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_BIC_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIC_rn_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIC_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIC_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIC_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_AND_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_AND_ai_idx, GR, GR) -> state_0,
 (state_3, fmt1_AND_ai_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_AND_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_AND_ai_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_AND_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_AND_ai_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_AND_ai_idx, R3, GR) -> state_0,
 (state_3, fmt1_AND_ai_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_AND_ai_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_AND_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_AND_ai_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_AND_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_AND_ai_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_AND_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_AND_ai_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_AND_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_AND_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_AND_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_AND_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_AND_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_AND_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_AND_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_AND_ai_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_AND_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_AND_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_AND_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_AND_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_AND_imm_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_AND_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_AND_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_AND_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_AND_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_AND_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_AND_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_AND_ind_idx, GR, GR) -> state_0,
 (state_3, fmt1_AND_ind_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_XOR_cg1_idx, R3, GR) -> state_0,
 (state_3, fmt1_XOR_cg1_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_XOR_cg1_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_XOR_cg1_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_XOR_cg1_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_XOR_cg1_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_XOR_cg1_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_XOR_rn_idx, GR, GR) -> state_1,
 (state_1, fmt1_XOR_rn_idx, GR, GR) -> state_0,
 (state_3, fmt1_XOR_rn_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_XOR_rn_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_XOR_rn_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_XOR_rn_idx, R3, GR) -> state_1,
 (state_1, fmt1_XOR_rn_idx, R3, GR) -> state_0,
 (state_3, fmt1_XOR_rn_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_XOR_rn_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_XOR_rn_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_XOR_rn_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_XOR_rn_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_XOR_rn_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_XOR_rn_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_XOR_rn_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_XOR_rn_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_XOR_rn_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_XOR_rn_idx, SP_R1, GR) -> state_2,
 (state_2, fmt1_XOR_rn_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_XOR_rn_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_XOR_rn_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> state_2,
 (state_2, fmt1_XOR_rn_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_XOR_rn_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_XOR_rn_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_XOR_rn_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_XOR_rn_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_XOR_rn_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, GR, GR) -> state_0,
 (state_3, fmt1_SUBC_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ai_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_ai_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ai_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_ai_idx, R3, GR) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, R3, GR) -> state_0,
 (state_3, fmt1_SUBC_ai_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ai_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_SUBC_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_SUBC_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_imm_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_SUBC_imm_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, GR, GR) -> state_0,
 (state_3, fmt1_SUBC_ind_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ind_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ind_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_ind_idx, R3, GR) -> state_0,
 (state_3, fmt1_SUBC_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ind_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ind_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_ind_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> state_1,
 (state_1, fmt1_SUBC_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_SUBC_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_SUBC_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_SUBC_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_SUBC_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_BIS_ai_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIS_ai_idx, GR, GR) -> state_0,
 (state_3, fmt1_BIS_ai_abs, GR, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ai_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_BIS_ai_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ai_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_BIS_ai_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ai_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_BIS_ai_idx, R3, GR) -> state_0,
 (state_3, fmt1_BIS_ai_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_BIS_ai_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ai_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_BIS_ai_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ai_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_BIS_ai_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIS_ai_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ai_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ai_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_BIS_ai_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_BIS_ai_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIS_ai_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ai_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_BIS_ai_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ai_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_BIS_imm_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> state_1,
 (state_1, fmt1_BIS_imm_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_BIS_imm_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> state_1,
 (state_1, fmt1_BIS_imm_sym, PC_R0, PC_R0) -> state_0,
 (state_3, fmt1_BIS_ind_idx, GR, GR) -> state_1,
 (state_1, fmt1_BIS_ind_idx, GR, GR) -> state_0,
 (state_3, fmt1_BIS_ind_abs, GR, SR_R2) -> state_0,
 (state_3, fmt1_BIS_ind_idx, GR, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ind_idx, GR, SP_R1) -> state_0,
 (state_3, fmt1_BIS_ind_sym, GR, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ind_sym, GR, PC_R0) -> state_0,
 (state_3, fmt1_BIS_ind_idx, R3, GR) -> state_1,
 (state_1, fmt1_BIS_ind_idx, R3, GR) -> state_0,
 (state_3, fmt1_BIS_ind_abs, R3, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ind_abs, R3, SR_R2) -> state_0,
 (state_3, fmt1_BIS_ind_idx, R3, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ind_idx, R3, SP_R1) -> state_0,
 (state_3, fmt1_BIS_ind_sym, R3, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ind_sym, R3, PC_R0) -> state_0,
 (state_3, fmt1_BIS_ind_idx, SR_R2, GR) -> state_1,
 (state_1, fmt1_BIS_ind_idx, SR_R2, GR) -> state_0,
 (state_3, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ind_abs, SR_R2, SR_R2) -> state_0,
 (state_3, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ind_idx, SR_R2, SP_R1) -> state_0,
 (state_3, fmt1_BIS_ind_sym, SR_R2, PC_R0) -> state_0,
 (state_3, fmt1_BIS_ind_idx, SP_R1, GR) -> state_1,
 (state_1, fmt1_BIS_ind_idx, SP_R1, GR) -> state_0,
 (state_3, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> state_1,
 (state_1, fmt1_BIS_ind_abs, SP_R1, SR_R2) -> state_0,
 (state_3, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> state_1,
 (state_1, fmt1_BIS_ind_idx, SP_R1, SP_R1) -> state_0,
 (state_3, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> state_1,
 (state_1, fmt1_BIS_ind_sym, SP_R1, PC_R0) -> state_0,
 (state_3, fmt1_BIS_im2_idx, PC_R0, GR) -> state_1,
 (state_1, fmt1_BIS_im2_idx, PC_R0, GR) -> state_0,
 (state_3, fmt1_BIS_im2_abs, PC_R0, SR_R2) -> state_0,
 (state_3, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> state_1,
 (state_1, fmt1_BIS_im2_idx, PC_R0, SP_R1) -> state_0,
 (state_3, fmt1_BIS_im2_sym, PC_R0, PC_R0) -> state_0,
 else -> state_0]""",
'state_fn_init':"""state_0""",
}
